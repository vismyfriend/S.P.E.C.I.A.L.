export class QuizQ {
    // –º–µ—Ç–æ–¥—ã (—Ç–µ –∂–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞)
    constructor(data) {
        this.quizAllQuestions = data.quizAllQuestions
        this.silcedQuestions = null
        this.task = document.querySelector(".quizQuestionTask")
        this.rules = document.querySelector(".quizQuestionRules")
        this.buttonContainer = document.querySelector(".quizButtonsContainer")
        this.buttonTryAgainOneMoreTime = document.querySelector(".areAmIsQuizOneButtonOne")
        this.currentIndex = 0
        this.scoreCounter = 0
        this.mistakesCounter = 0


        this.startGame()
    }



    // /–ø–æ—ç—Ç–æ–º—É —Ç—É—Ç –Ω–µ –Ω—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å function
    shuffle(array) {
        return array.sort(function () {
            return Math.random() - 0.5;
        });
    }
    silceArray(array) {
        this.silcedQuestions = array.slice(0, 10) //–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ —Ç–µ—Å—Ç–µ –∫–æ–≥–¥–∞ —á–µ —Ç–∞–º
        // 0 - c –∫–∞–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏ –¥–æ –∫–∞–∫–æ–≥–æ 10 )

    }
    startGame() {
        this.silceArray(this.shuffle(this.quizAllQuestions))
        this.showTheTask(this.quizAllQuestions[this.currentIndex])
      
        
    }
    showTheTask(data) {
        this.task.textContent = data.quizQuestion
        const shuffeledAnswers = this.shuffle(data.answers)
        this.buttonContainer.innerHTML = ""
        shuffeledAnswers.map((answer, index) => {

            // –º–æ–∂–Ω–æ –±—ã–ª–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏–Ω–¥–µ–∫—Å
            const button = this.createButton(answer)
            this.buttonContainer.append(button)
        })

    }
    createButton(data) {
        const button = document.createElement("button")
        button.classList.add("quizButton")
        button.textContent = data.answer
        this.setEventListener(button, data.correct)
        return button
    }

    timeOut(button, time, deletedClass) {
        return new Promise((resolve) => {
            this.buttonContainer.classList.add("blockedForSomeTime")
            setTimeout(() => {
                button.classList.remove(deletedClass)
                this.buttonContainer.classList.remove("blockedForSomeTime")
                resolve()
            }, time)
        })

    }
  
// if (currentIndex === this.slicedQestion.length && !correct) return
    setEventListener(button, correct) {

        button.addEventListener("click", async () => {
          
           
            if (!correct) {
                this.mistakesCounter += 1
                console.log("–Ω–µ–≤–µ—Ä–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤", this.mistakesCounter)
                console.log("–≤–µ—Ä–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤", this.scoreCounter)
                button.classList.add("wrong")
                await this.timeOut(button, 1000, "wrong")
                this.silcedQuestions.push(this.silcedQuestions[this.currentIndex])
           
            } else {
                this.scoreCounter += 1
                button.classList.add("correct")
                await this.timeOut(button, 700, "correct")
             
            }
            
            this.currentIndex += 1

            if (this.currentIndex >= this.silcedQuestions.length) { //–∫–æ–≥–¥–∞ —á–µ —Ç–∞–º//
                this.scoreCounter += 1   
                //    –≤–æ—Ç –∑–¥–µ—Å—å (–∏–ª–∏ –≤ —Å–∞–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ game over) –Ω—É–∂–Ω–∞ –µ—â–µ –æ–¥–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ - –∞ —Ç–æ –∏–Ω–∞—á–µ –æ–Ω –≤—Å–µ–≥–¥–∞ –≤–µ—Ä–Ω—ã–º –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç–∞–º –æ—à–∏–±–∫–∞
                this.gameOver()
                button.classList.add("correct")
                await this.timeOut(button, 25000, "correct")
                return
            }


            this.showTheTask(this.silcedQuestions[this.currentIndex])
            

        }
        )
    }
    gameOver() { 
        
        this.rules.textContent = ` üèÜ –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ¬†–æ—à–∏–±–æ–∫¬†–∏–ª–∏ "–û–π,¬†–¥–∞¬†—è¬†—Å–ª—É—á–∞–π–Ω–æ¬†—Ç—É–¥–∞¬†—Ç—ã–∫–Ω—É–ª :¬†${ this.mistakesCounter}¬†" –º–æ–∂–µ—à—å –ø—Ä–æ–π—Ç–∏ –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã¬†—Ç–µ—Å—Ç–∞, –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã –±—É–¥—É—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è üîé `
        this.buttonTryAgainOneMoreTime.classList.remove("none")
    }

   

    
}