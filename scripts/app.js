import allCardsGameFindAPair from "./utils/find-a-pair.js"
import allQuestionsOneDeck from "./utils/questions.js"
// import allQuestionsSecondDeck from "./utils/questions.js"
import allWordsForGameTypeOrWrite from "./utils/TypeOrWrite.js"
import allWordsForScrambledGame from "./utils/ScrambledGameData.js"
import linksToHW from "./utils/linksToHW.js"
import aNGPatternData from "./utils/aNGdata.js"
import { aNGmechanic } from "./games/aNGmechanic.js"
import slotMachineData from "./utils/slotMachineData.js"
import allSetsArray from "./utils/allSetsArray.js"
import playList from "./utils/music.js"
import quizQuestionsList from "./utils/QuizQData.js"
// —Ç–∞–º —Å –æ–ø–µ—á–∞—Ç–∫–æ–π –Ω–∞–ø–∏—Å–∞–Ω–æ —á—Ç–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Ñ–∞–π–ª–µ —Å–Ω–∏–∑—É, –Ω–æ –≤—Å–µ —Ä–∞–≤–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç) default export —Ä–µ—à–∞–µ—Ç!
import { QuizQ } from "./games/QuizQ.js"
import gameTwoDecksListData from "./utils/gameTwoDecksData.js"
import { gameTwoDecks } from "./games/gameTwoDecks.js"
import benderWordOrderSentences from "./utils/benderWordOrder.js"

const aNGPattern = document.querySelector(".popupMissionsAndSets__aNGPattern")
const linksToHWbutton = document.querySelector(".popupMissionsAndSets__linksToHWbutton")
const body = document.querySelector(".body")
const logoSpecial = document.querySelector(".logo-special")
const fryFuturamaMainScreenIntro = document.querySelector(".fryFuturamaMainScreenIntro")

const headerPageReoad = document.querySelector(".headerPageReoad")
headerPageReoad?.addEventListener("click", pageReloadRefresh)

const gameLieToMe = document.querySelector(".gameLieToMe")

const clickTest = document.querySelector(".clickTest")

const backToChoosingTheMissions = document.querySelector(".backToChoosingTheMissions")
backToChoosingTheMissions.addEventListener("click", backToTheVeryFirstScreen)





function startGameLieToMe() {
    popupMissionsAndSets.classList.add("none")
    gameLieToMe.classList.remove("none")
    clickTest.classList.add("none")
}


clickTest.addEventListener("click", startGameLieToMe)


// —É—Ç–æ—á–Ω–∏—Ç—å —É –≠–Ω–¥—Ä—é –ø—Ä–æ —Å—Ç—Ä–æ–∫—É –Ω–∏–∂–µ - —á—Ç–æ —ç—Ç–æ 
const isTouch = () => 'ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch || navigator.maxTouchPoints > 0 || window.navigator.msMaxTouchPoints > 0

const dataFromEachPopupMissionsAndSets = document.querySelectorAll(".popupMissionsAndSets__set")
const popupMissionsAndSetsSets = document.querySelector(".popupMissionsAndSets__sets")
const chosenSet = document.querySelector(".popupMissionsAndSets__chosen-set")
const popupMissionsAndSets = document.querySelector(".popupMissionsAndSets")
const popupMissionsAndSetsTitle = document.querySelector(".popupMissionsAndSets__title")
const popupMissionsAndSetsDescription = document.querySelector(".popupMissionsAndSets__description")
const popupMissionsAndSetsGameFindAPair = document.querySelector(".popupMissionsAndSets__gameFindAPair")

const copyThisForNewGames = document.querySelector(".popupMissionsAndSets__copyThisForNewGames")

const oneDeckButtonText = document.querySelector(".oneDeckButtonText")
const oneDeckButtonPrevious = document.querySelector(".oneDeckButtonPrevious")
const oneDeckButtonCheck = document.querySelector(".oneDeckButtonCheck")
const oneDeckButtonNext = document.querySelector(".oneDeckButtonNext")
const oneDeckButtonSwitch = document.querySelector(".oneDeckButtonSwitch")
const cardForSpeakingGame = document.querySelector(".oneDeckOfCards_cardForSpeakingGame")
const topOfTheCard1Value = cardForSpeakingGame.querySelector(".oneDeckOfCards__topOfTheCard1Value")
const bottomOfTheCard1Value = cardForSpeakingGame.querySelector(".oneDeckOfCards__bottomOfTheCard1Value")

const gameTypeOrWrite = document.querySelector(".gameTypeOrWrite")
const gameTrickyQuiz = document.querySelector(".gameTrickyQuiz")
const aNGcontainer = document.querySelector(".aNGcontainer")

const mainContainer5gameTwoCardDecks = document.querySelector(".mainContainer5gameTwoCardDecks")

// –Ω–∏–∂–µ –ø–æ–ª—É—á–∞–µ–º –Ω—É–∂–Ω—ã–π –º–∞—Å—Å–∏–≤ –∏ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –≤ –Ω—ë–º —ç–ª–µ–º–µ–Ω—Ç—ã
// —É—Ç–æ—á–Ω–∏—Ç—å, —á—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç set –≤ —Å–∫–æ–±–∫–∞—Ö - —ç—Ç–æ –∞—Ä–≥—É–º–µ–Ω—Ç –∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∏ —Ä–∞–∑–Ω–∏—Ü–∞ –≤ —á–µ–º? 
let currentSet = null

let quizGameClass = null
let aNGclass = null




function getArray(set) {
    currentSet = set
    chosenArray = null
    chooseQuestions = null
    chooseTypeOrWrite = null

    //–ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–∞—Å—Å–∏–≤–µ
    chosenArray = allCardsGameFindAPair[set]?.sort(function () {
        return Math.random() - 0.5;
    });
    chooseQuestions = allQuestionsOneDeck[set]?.sort(function () {
        return Math.random() - 0.5;
    });
    chooseTypeOrWrite = allWordsForGameTypeOrWrite[set]?.sort(function () {
        return Math.random() - 0.5;
    });
    chooseScrambledGame = allWordsForScrambledGame[set]?.sort(function () {
        return Math.random() - 0.5;
    });
    benderWordOrderSentences[set]?.sort(function () {
        return Math.random() - 0.5;
    });
    // renderWordsGameBenderWordOrderGame()

}

function doWeHaveThisGame(set) {
    // –µ—Å–ª–∏ –æ–Ω –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç –Ω–∞–±–æ—Ä, —Ç–æ —Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Å –∏–≥—Ä–æ–π
    if (!allCardsGameFindAPair[set]) popupMissionsAndSetsGameFindAPair.classList.remove("show")
    // if (!allWordsForGameTypeOrWrite[set]) InputTypeOrWriteGame.classList.add("show")
    if (!allQuestionsOneDeck[set]) letsSpeak.classList.remove("show")
    if (!quizQuestionsList[set]) multipleChoiceQuiz.classList.remove("show")
    if (!benderWordOrderSentences[set]) BenderWordOrderGameButton.classList.remove("show")
    if (!allWordsForGameTypeOrWrite[set]) startGameTNTbutton.classList.remove("show")
    if (!allWordsForScrambledGame[set]) scrambledstartGameTNTbutton.classList.remove("show")
    if (!linksToHW[set]) linksToHWbutton.classList.remove("show")
        // –¥–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É —á—Ç–æ–±—ã –Ω–æ–≤—ã–π –∫–ª–∞—Å—Å –Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ –¥–µ—Ç—è–º 
    if (linksToHW[set]) linksToHWbutton.children[1].href = linksToHW[set]
    if (!slotMachineData[set]) slotMachine.classList.remove("show")
    if (!aNGPatternData[set]) aNGPattern.classList.remove("show")



}

//–ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –Ω–∞–±–æ—Ä–∞–º, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–∑–¥–∞–ª–∏ –≤ index.html

dataFromEachPopupMissionsAndSets.forEach((set) => {
    set.addEventListener("click", (evt) => {
        chooseSet(evt.target.textContent, evt.target.dataset.set)
        resetPageButton.classList.remove("opacityZero")
        backToChoosingTheMissions.classList.remove("opacityZero")
        popupMissionsAndSetsTitle.classList.remove("none")
        getArray(evt.target.dataset.set)
        //—É—Ç–æ—á–Ω–∏—Ç—å —Ç—É—Ç –≤—Å–µ - —á—Ç–æ —Ç–∞–∫–æ–µ evt.target
        // console.log("SET - —ç—Ç–æ –≤–µ—Å—å —ç–ª–µ–º–µ–Ω—Ç –∏–∑ HTML =", set)
        // console.log("currentSet - —ç—Ç–æ —á–∞—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç–∞ HTML (Data-Set) =", currentSet, currentSet.innerHTML)
        // console.log("–≤–æ—Ç",allQuestionsSecondDeck)
        chooseSong(evt.target.dataset.set)
    })
})

// —É—Ç–æ—á–Ω–∏—Ç—å, —á—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç textTheNameOfTheChosenSet –≤ —Å–∫–æ–±–∫–∞—Ö - —ç—Ç–æ –∞—Ä–≥—É–º–µ–Ω—Ç –∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∏ —Ä–∞–∑–Ω–∏—Ü–∞ –≤ —á–µ–º? –î–ª—è —á–µ–≥–æ —ç—Ç–æ –Ω—É–∂–Ω–æ?


function chooseSet(textTheNameOfTheChosenSet, set) {

    aNGPattern.classList.add("show")
    // console.log(set)
    chosenSet.textContent = textTheNameOfTheChosenSet
    // console.log("–Ω–∞–∑–≤–∞–Ω–∏–µ –º–∏—Å—Å–∏–∏=", textTheNameOfTheChosenSet)
    popupMissionsAndSetsTitle.textContent = "show your best result:"
    popupMissionsAndSetsTitle.classList.add("greyText")
    popupMissionsAndSetsDescription.textContent = "–ß—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ –º–∏—Å—Å–∏—é –≤—ã–ø–æ–ª–Ω–∏ tasks¬†–∑–∞–¥–∞–Ω–∏—è üëá "
    popupMissionsAndSetsDescription.textContent = "–ü–æ–∫–∞–∂–∏ —Å–≤–æ–π –ª—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç  /¬†—à–æ—É¬†—ë¬†–±—ç—Å—Ç¬†—Ä–µ–∑–ê–ª—Ç¬†/"
    fryFuturamaMainScreenIntro.classList.add("noshow")
    userSearchesForMission.classList.add("none")
    // userSearchesForMission.value = ""
    logoSpecial.classList.add("hidden")
    gameFindPairsTryAgainButton.classList.add("hidden")
    oneDeckButtons.classList.remove("visible")
    popupMissionsAndSetsSets.classList.add("hide")
    // InputTypeOrWriteGame.classList.add("show")
    popupMissionsAndSetsGameFindAPair.classList.add("show")
    startGameTNTbutton.classList.add("show")
    linksToHWbutton.classList.add("show")
    slotMachine.classList.add("show")
    scrambledstartGameTNTbutton.classList.add("show")
    multipleChoiceQuiz.classList.add("show")
    copyThisForNewGames?.classList.add("show")
    // –∑–Ω–∞–∫ –≤–æ–ø—Ä–æ—Å–∞ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç –æ—à–∏–±–∫—É
    BenderWordOrderGameButton.classList.add("show")
    letsSpeak.classList.add("show")
    chosenSet.classList.add("show")
    usedCheatsText.classList.remove("visible")
    starsEmoji.classList.remove("visible")
    userSearchesForMissionSet()
    // –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è –∏–≥—Ä–∞ –≤–∫–æ–Ω—Ü–µ –≤—Å–µ–≥–¥–∞
    doWeHaveThisGame(set)


}

function backToTheVeryFirstScreen() {
    clearInterval(interval)
    //–≤–æ—Ç —Å—é–¥–∞ –Ω—É–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ –∫–≤–∏–∑–∞ clearInterval(this.QuizTimerMechanics)

    // —É—Ç–æ—á–Ω–∏—Ç—å —Ç–∞–π–º–µ—Ä —Å–±—Ä–æ—Å —Ç–∞–π–º–µ—Ä–∞ —Ç–æ –µ—Å—Ç—å –ª–æ–º–∞–µ—Ç –∏–≥—Ä—É –µ—Å–ª–∏ –º—ã –µ—â–µ –Ω–µ –∑–∞—Ö–æ–¥–∏–ª–∏ –≤ –∏–≥—Ä—É –∫–≤–∏–∑

    console.log(quizGameClass)
    // –µ–≥–æ—Ä—á–∏–∫ –ø–æ–º–æ–≥–∏
    quizGameClass?.stopTimer()
    // –ø–æ—Å—Ç–∞–≤–∏–ª –∑–Ω–∞–∫ –≤–æ–ø—Ä–æ—Å–∞, —á—Ç–æ–±—É –ø—Ä–æ–ø—É—Å–∫–∞–ª–æ –æ—à–∏–±–∫—É


    scoreGameBenderWordOrderGame = 0
    scoreTypeOrWriteGame = 0
    scoreTNTGame = 0
    scrambledscoreTNTGame = 0
    lifeGameBenderWordOrderGame = 5
    n = -1



    aNGPattern.classList.remove("show")
    popupMissionsAndSetsDescription.textContent = "üëà¬†choose your mission to practise¬†üëâ /¬†—á–£–∑¬†—ë¬†–º–∏—à–Ω¬†—Ç—É¬†–ø—Ä–≠–∫—Ç–∏—Å¬†/"
    userSearchesForMission.classList.remove("none")
    popupMissionsAndSetsSets.classList.remove("hide")
    popupMissionsAndSetsTitle.classList.add("none")
    chosenSet.classList.remove("show")
    linksToHWbutton.classList.remove("show")
    slotMachine.classList.remove("show")
    popupMissionsAndSetsGameFindAPair.classList.remove("show")
    letsSpeak.classList.remove("show")
    multipleChoiceQuiz.classList.remove("show")
    BenderWordOrderGameButton.classList.remove("show")
    startGameTNTbutton.classList.remove("show")
    scrambledstartGameTNTbutton.classList.remove("show")

    gameFindAPair.classList.remove("open")
    popupMissionsAndSets.classList.remove("close")
    popupMissionsAndSets.classList.remove("none")
    gameTNT.classList.add("none")
    scrambledgameTNT.classList.add("none")
    clickTest.classList.add("none")
    TNTgameCounter.classList.add("none")
    scrambledTNTgameCounter.classList.add("none")
    usedCheatsText.classList.remove("visible")
    clearInterval(TNTtimerMechanics)
    clearInterval(scrambledTNTtimerMechanics)


    TNTbeforeExplosion = 59
    scrambledTNTbeforeExplosion = 1
    scoreTNTGame = 0
    scrambledscoreTNTGame = 0
    playerInputType.value = ""
    scoreTypeOrWriteGame = 0
    typeOrWriteNumber = 0
    min = 0
    max = 6
    tens = "00"
    seconds = "00"
    interval = null
    count = 0
    foundPairs = 0
    howManyTimesSkipped = 0
    pairsRemainToMatch = 0
    value = null
    questionNumber = 0
    typeOrWriteNumber = 0
    gameFindAPairContainer.innerHTML = ""
    TNTuserInput.value = ""
    scrambledTNTuserInput.value = ""

    TNTgameTaskHint.classList.remove("green")
    scrambledTNTgameTaskHint.classList.remove("green")


    TNTgameButtonStartAgain.classList.add("none")
    scrambledTNTgameButtonStartAgain.classList.add("none")
    TNTgameTaskHint.textContent = "–ß—Ç–æ–±—ã –æ–±–µ–∑–≤—Ä–µ–¥–∏—Ç—å –±–æ–º–±—ã –Ω–∞–ø–∏—à–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º:"
    scrambledTNTgameTaskHint.textContent = "–ö—Ç–æ-—Ç–æ –ø–µ—Ä–µ–º–µ—à–∞–ª –±—É–∫–≤—ã! –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏ –ø–æ—Ä—è–¥–æ–∫ :"
    // BenderWordOrderGameContainerOne.classList.add("none")
    // currentSet = null
    // dataFromEachPopupMissionsAndSets.forEach((set) => {
    //     set.addEventListener("click", (evt) => {
    //         chooseSet(evt.target.textContent, evt.target.dataset.set)
    //         getArray(evt.target.dataset.set)
    //         //—É—Ç–æ—á–Ω–∏—Ç—å —Ç—É—Ç –≤—Å–µ - —á—Ç–æ —Ç–∞–∫–æ–µ evt.target
    //         console.log("SET - —ç—Ç–æ –≤–µ—Å—å —ç–ª–µ–º–µ–Ω—Ç –∏–∑ HTML =", set)
    //         console.log("currentSet - —ç—Ç–æ —á–∞—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç–∞ HTML (Data-Set) =", currentSet)
    //         // console.log("–≤–æ—Ç",allQuestionsSecondDeck)
    //         chooseSong(evt.target.dataset.set)
    //     })
    // })
    gameFindPairsTryAgainButton.classList.add("hidden")
    starsEmoji.classList.remove("visible")

    // resetPageButton.classList.add("opacityZero")
    backToChoosingTheMissions.classList.add("opacityZero")


    oneDeckButtons.classList.remove("visible")
    fryFuturamaMainScreenIntro.classList.remove("noshow")


    usedCheatsText.classList.remove("visible")
    oneDeckButtonText.classList.remove("visible")
    popupMissionsAndSets.classList.remove("close")
    cardForSpeakingGame.classList.add("hiddenDeck")

    // chooseQuestions = chooseQuestions.sort(function () {
    //     return Math.random() - 0.5;
    // });

    questionNumber = 0
    cardForSpeakingGame.classList.remove("AnOpenCard")
    cardForSpeakingGame.style.border = 'none';



    mainContainerIntroAnd2games.classList.remove("none")
    gameBender.classList.add("none")

    gameTrickyQuiz.classList.add("none")
    body.classList.remove("BenderWordOrderGameBackgroundPicture")

    userSearchesForMission.classList.remove("none")



    containerMistakeGameBenderWordOrderGame.classList.remove("show")
    logoSpecial.classList.remove("hidden")
    // userSearchesForMission.value = ""
    // console.log("–∫–æ–Ω–µ—Ü —Ñ—É–Ω–∫—Ü–∏–∏")
}



// –Ω–∏–∂–µ –ø–æ–∏—Å–∫ –Ω–∞–±–æ—Ä–∞ –ø–æ –±—É–∫–≤–∞–º –ø–æ–∏—Å–∫ –Ω–∞–±–æ—Ä–∞ –ø–æ –±—É–∫–≤–∞–º –ø–æ–∏—Å–∫ –Ω–∞–±–æ—Ä–∞ –ø–æ –±—É–∫–≤–∞–º –ø–æ–∏—Å–∫ –Ω–∞–±–æ—Ä–∞ –ø–æ –±—É–∫–≤–∞–º –ø–æ–∏—Å–∫ –Ω–∞–±–æ—Ä–∞ –ø–æ –±—É–∫–≤–∞–º

const userSearchesForMission = document.querySelector(".userInput.userSearchesForMission")

userSearchesForMission.addEventListener("input", () => userSearchesForMissionSet())

function userSearchesForMissionSet() {
    // —á—Ç–æ–±—ã –∫–æ—Ä—Ä–µ–∫—Ç–æ —Ä–∞–±–æ—Ç–∞–ª–æ –Ω—É–∂–Ω–æ popupMissionsAndSets__set —á—Ç–æ–±—ã –±—ã–ª –Ω–∞ –∫–∞–∂–¥–æ–º –Ω–∞–±–æ—Ä–µ
    // —Å–æ–±—Ä–∞–ª–∏ –≤—Å–µ –Ω–∞–±–æ—Ä—ã —Å–ª–æ–≤ –≤ –æ–¥–∏–Ω –º–∞—Å—Å–∏–≤
    let allSetsInHTML = Array.from(document.querySelectorAll(".popupMissionsAndSets__set"))
    // —Å–¥–µ–ª–∞–ª–∏ –≤—Å–µ –∏—Ö –Ω–µ–≤–∏–¥–∏–º—ã–º–∏
    allSetsInHTML.forEach(el => el.classList.add("none"))
    // –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–ª–∏ –ø–æ —Ç–æ–º—É, —á—Ç–æ –≤–≤–µ–ª –∞–≥–µ–Ω—Ç (—Å—Ç—É–¥–µ–Ω—Ç)
    let foundMissions = allSetsInHTML.filter(el => el.innerHTML.toLowerCase().includes(userSearchesForMission.value.toLowerCase()))
    // –≤–∫–ª—é—á–∏–ª–∏ –≤–∏–¥–∏–º–æ—Å—Ç—å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º –Ω–∞–±–æ—Ä–∞–º
    foundMissions.forEach(el => el.classList.remove("none"))
}



const mainContainerIntroAnd2games = document.querySelector(".mainContainerIntroAnd2games")
const multipleChoiceQuiz = document.querySelector(".popupMissionsAndSets__multipleChoiceQuiz")

function aNGstart() {
    mainContainerIntroAnd2games.classList.add("none")
    gameBender.classList.add("none")
    aNGcontainer.classList.remove("none")
    aNGclass = new aNGmechanic({ aNGdata: aNGPatternData[currentSet] })
    
}
aNGPattern.addEventListener("click", aNGstart)





// –Ω–∏–∂–µ –∏–≥—Ä–∞ quiz test multiple choice –Ω–∏–∂–µ –∏–≥—Ä–∞ quiz test multiple choice –Ω–∏–∂–µ –∏–≥—Ä–∞ quiz test multiple choice –Ω–∏–∂–µ –∏–≥—Ä–∞ quiz test multiple choice



function startGameMultipleChoiceQuiz() {
    body.classList.add("BenderWordOrderGameBackgroundPicture")
    // location.href = "https://bababum95.github.io/vinchento/slot-machine.html"
    mainContainerIntroAnd2games.classList.add("none")
    gameBender.classList.add("none")
    gameTrickyQuiz.classList.remove("none")
    quizGameClass = new QuizQ({ quizAllQuestions: quizQuestionsList[currentSet] })
}
multipleChoiceQuiz.addEventListener("click", startGameMultipleChoiceQuiz)
// –≤—ã—à–µ –∏–≥—Ä–∞ quiz test multiple choice




// –Ω–∏–∂–µ –≤—Å–µ –¥–ª—è –∏–≥—Ä—ã find pairs find a pair –Ω–∏–∂–µ –≤—Å–µ –¥–ª—è –∏–≥—Ä—ã find pairs find a pair –Ω–∏–∂–µ –≤—Å–µ –¥–ª—è –∏–≥—Ä—ã find pairs find a pair
// —É—Ç–æ—á–Ω–∏—Ç—å –ø—Ä–æ —Ç–∞–∫–æ–π –∞–¥—Ä–µ—Å –Ω–∏–∂–µ —á—Ç–æ —ç—Ç–æ –∏ –∫–∞–∫ —ç—Ç–æ
const card = document.querySelector(".template").content.querySelector(".card")
const gameFindAPair = document.querySelector(".gameFindAPair")
const gameFindAPairButtonSkipThese = document.querySelector(".gameFindAPairButtonSkipThese")
const gameFindAPairContainer = document.querySelector(".gameFindAPair__container")
const gameFindAPairButtonNotUsed = document.querySelector(".gameFindAPairButtonNotUsed")
const gameFindAPairButtonBackToMissions = document.querySelector(".gameFindAPairButtonBackToMissions")
const gameFindAPairInfo = document.querySelector(".gameFindAPair-info")
const usedCheatsText = document.querySelector(".usedCheatsText")
const timer = document.querySelector(".timer")
const timeSeconds = document.getElementById("seconds")
const timeMiliseconds = document.getElementById("tens")
const gameFindPairsTryAgainButton = document.querySelector(".gameFindPairsButtonTry-again")
let selectCard = null
let chosenArray = null
let chooseQuestions = null
let chooseTypeOrWrite = null
let chooseScrambledGame = null
let min = 0
let max = 6
let tens = "00"
let seconds = "00"
let interval = null
let count = 0
let foundPairs = 0
let howManyTimesSkipped = 0
let pairsRemainToMatch = 0
let value = null
let questionNumber = 0
let typeOrWriteNumber = 0
let scrambledtypeOrWriteNumber = 0

popupMissionsAndSetsGameFindAPair.addEventListener("click", startGameFindPairs)

function startGameFindPairs() {
    // resetPageButton.classList.add("opacityZero")
    // backToChoosingTheMissions.classList.add("opacityZero")
    // console.log("arrayLength - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä —Å–ª–æ–≤", chosenArray.length)
    howManyStarsScore()
    // console.log("–≤—Ä–µ–º—è –Ω–∞ 5 –∑–≤–µ–∑–¥ <", timeToGet5StarResult)
    // console.log(currentSet)
    // replaceHeaderButton1()
    renderCards("ru")
    renderCards("eng")
    fryFuturamaMainScreenIntro.classList.add("noshow")
    usedCheatsText.classList.remove("visible")
    gameFindAPairButtonBackToMissions.disabled = false;
    gameFindAPairButtonNotUsed.disabled = true;
    howManyTimesSkipped = 0
    pairsRemainToMatch = chosenArray.length
    foundPairs = 0
    gameFindAPairInfo.textContent = `/ —Ñ–∞–π–Ω–¥ —ç –ø–≠–∞ /  -  –Ω–∞–π–¥–∏ –ø–∞—Ä—É`
    usedCheatsText.textContent = `—á–∏—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: ${howManyTimesSkipped}. –¢–≤–æ–∏ –∑–≤—ë–∑–¥—ã –∑–∞ –∑–∞–¥–∞–Ω–∏–µ:`
    popupMissionsAndSets.classList.add("close")
    logoSpecial.classList.add("hidden")
    gameFindAPair.classList.add("open")
    interval = setInterval(startTimer, 10);
    // audioTest.play()
    // console.log(audioTest)
    missionMusicBackground.volume = 0;
    missionMusicBackgroundIconButton.classList.add("off")
    missionMusicBackgroundIconButton.classList.add("hidden")
    audioIcon.classList.add("visible")
}

function renderCards(lang) {
    let array = readyArray()
    let shuffle = array.sort(function () {
        return Math.random() - 0.5;
    });
    for (let i = 0; i < shuffle.length; i++) {
        console.log(shuffle[i][lang])
        const someCard = card.cloneNode(true)
        someCard.textContent = shuffle[i][lang]
        someCard.classList.add(lang)
        someCard.addEventListener("click", match)
        someCard.dataset.id = shuffle[i].id
        gameFindAPairContainer.append(someCard)
    }
}

function readyArray() {
    return chosenArray.slice(min, max)
}

function match(evt) {
    if (!!selectCard) {
        if (selectCard.dataset.id === evt.target.dataset.id && selectCard !== evt.target) {
            selectCard.classList.add("delete")
            evt.target.classList.add("delete")
            count++
            count === max - min ? nextCards() : null
            foundPairs++;
            pairsRemainToMatch--
            gameFindAPairInfo.textContent = `–Ω–∞–π–¥–µ–Ω–æ –ø–∞—Ä: ${foundPairs} / ${chosenArray.length}`
        }
        selectCard.classList.remove("select")
        selectCard = null
    } else {
        evt.target.classList.add("select")
        selectCard = evt.target
    }
}

function nextCards() {
    gameFindAPairContainer.innerHTML = ""
    if (max === chosenArray.length) {
        finishGame()
    } else {
        min = min + 6
        max = max + 6 > chosenArray.length ? chosenArray.length : max + 6
        pairsRemainToMatch = pairsRemainToMatch - 6 + count;
        count = 0
        renderCards("ru")
        renderCards("eng")
    }
}

function finishGame() {
    clearInterval(interval)
    starResult()
    // resetPageButton.classList.add("opacityZero")
    // backToChoosingTheMissions.classList.add("opacityZero")
    userSearchesForMission.classList.remove("none")
    starsEmoji.classList.add("visible")
    usedCheatsText.textContent = `–°–¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–∫—É –≤ –Ω–∞—à —á–∞—Ç. –ü–æ–¥–µ–ª–∏—Å—å —Å Vincent : ¬†${howManyTimesSkipped}MG : ${chosenSet.textContent} `
    usedCheatsText.classList.add("visible")
    gameFindPairsTryAgainButton.classList.remove("hidden")
    popupMissionsAndSets.classList.remove("close")
    gameFindAPair.classList.remove("open")
    popupMissionsAndSetsTitle.textContent = `–†–µ–∑—É–ª—å—Ç–∞—Ç ${timer.textContent} seconds`
    // popupMissionsAndSetsTitle.textContent = `Mission ${chosenSet.textContent} —Ä–µ–∑—É–ª—å—Ç–∞—Ç ${timer.textContent} seconds`
    popupMissionsAndSetsDescription.innerHTML = "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç = –ø—è—Ç—å –∑–≤—ë–∑–¥ üèÜ –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑! Try again."
    timeMiliseconds.textContent = "00"
    timeSeconds.textContent = "00"
    popupMissionsAndSetsSets.classList.remove("hide")
    InputTypeOrWriteGame.classList.remove("show")
    scrambledstartGameTNTbutton.classList.remove("show")
    popupMissionsAndSetsGameFindAPair.classList.remove("show")
    slotMachine.classList.remove("show")
    multipleChoiceQuiz.classList.remove("show")
    copyThisForNewGames?.classList.remove("show")
    BenderWordOrderGameButton.classList.remove("show")
    aNGPattern.classList.remove("show")
    linksToHWbutton.classList.remove("show")
    slotMachine.classList.remove("show")
    startGameTNTbutton.classList.remove("show")
    letsSpeak.classList.remove("show")
    chosenSet.classList.remove("show")
    gameFindPairsTryAgainButton.textContent = `üí™ –ù–∞–∂–º–∏ —Å—é–¥–∞ üëç –∏¬†—É–ª—É—á—à–∏¬†—Ä–µ–∑—É–ª—å—Ç–∞—Ç`
    // gameFindPairsTryAgainButton.textContent = `–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±—ã—Å—Ç—Ä–µ–µ! üí™¬†Try faster!¬†üëç üöÄ`
    const AudioWinner = new Audio("https://zvukitop.com/wp-content/uploads/2021/03/zvuk-tadam-na-trube.mp3");
    AudioWinner.volume = 0.06;
    AudioWinner.play()
    min = 0
    max = 6
    tens = "00";
    seconds = "00";
    gameFindAPairContainer.innerHTML = ""
    count = 0
}

//–Ω–∏–∂–µ —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—Å–≤–µ—á–∏–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥
const starsEmoji = document.querySelector(".starsEmoji")
let howManyStarsEmoji = 5
let timeToGet5StarResult = 40
let timeToGet4StarResult = 50
let timeToGet3StarResult = 60
let timeToGet2StarResult = 75

function howManyStarsScore() {
    // console.log("arrayLength",chosenArray.length)
    if (chosenArray.length < 13) {
        timeToGet5StarResult = 9
        timeToGet4StarResult = 12
        timeToGet3StarResult = 18
        timeToGet2StarResult = 22
        console.log('—á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—è—Ç—å –∑–≤–µ–∑–¥' + timeToGet5StarResult)
    } else if (chosenArray.length > 12 && chosenArray.length < 19) {
        timeToGet5StarResult = 15
        timeToGet4StarResult = 20
        timeToGet3StarResult = 30
        timeToGet2StarResult = 40
    } else if (chosenArray.length > 18 && chosenArray.length < 25) {
        timeToGet5StarResult = 27
        timeToGet4StarResult = 31
        timeToGet3StarResult = 35
        timeToGet2StarResult = 43
    } else if (chosenArray.length > 24 && chosenArray.length < 31) {
        timeToGet5StarResult = 35
        timeToGet4StarResult = 44
        timeToGet3StarResult = 52
        timeToGet2StarResult = 70
    } else if (chosenArray.length > 30 && chosenArray.length < 37) {
        timeToGet5StarResult = 42
        timeToGet4StarResult = 51
        timeToGet3StarResult = 70
        timeToGet2StarResult = 90
    } else if (chosenArray.length > 36 && chosenArray.length < 44) {
        timeToGet5StarResult = 55
        timeToGet4StarResult = 65
        timeToGet3StarResult = 85
        timeToGet2StarResult = 100
    } else if (chosenArray.length > 43 && chosenArray.length) {
        timeToGet5StarResult = 85
        timeToGet4StarResult = 100
        timeToGet3StarResult = 120
        timeToGet2StarResult = 150
    }
}

function starResult() {
    howManyStarsScore()
    if (seconds < timeToGet5StarResult) {
        howManyStarsEmoji = 5
        starsEmoji.style.width = `${howManyStarsEmoji * 31}px`
    } else if (seconds > timeToGet5StarResult && seconds < timeToGet4StarResult) {
        howManyStarsEmoji = 4
        starsEmoji.style.width = `${howManyStarsEmoji * 31}px`
    } else if (seconds > timeToGet4StarResult && seconds < timeToGet3StarResult) {
        howManyStarsEmoji = 3
        starsEmoji.style.width = `${howManyStarsEmoji * 31}px`
    } else if (seconds > timeToGet3StarResult && seconds < timeToGet2StarResult) {
        howManyStarsEmoji = 2
        starsEmoji.style.width = `${howManyStarsEmoji * 31}px`
    } else if (seconds > timeToGet2StarResult) {
        howManyStarsEmoji = 1
        starsEmoji.style.width = `${howManyStarsEmoji * 31}px`
    }
}
//–≤—ã—à–µ  —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—Å–≤–µ—á–∏–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥

function startTimer() {
    tens++;
    if (tens <= 9) {
        timeMiliseconds.textContent = "0" + tens;
    }
    if (tens > 9) {
        timeMiliseconds.textContent = tens;
    }
    if (tens > 99) {
        seconds++;
        timeSeconds.textContent = "0" + seconds;
        tens = 0;
        timeMiliseconds.textContent = "0" + 0;
    }
    if (seconds > 9) {
        timeSeconds.textContent = seconds;

    }
    console.log(timeSeconds.textContent)
}


function nextCardsGameFindAPairCheatUsed() {
    gameFindAPairContainer.innerHTML = ""
    howManyTimesSkipped++;
    if (max === chosenArray.length) {
        finishGame()
    } else {
        min = min + 6
        max = max + 6 > chosenArray.length ? chosenArray.length : max + 6
        pairsRemainToMatch = pairsRemainToMatch - 6 + count;
        count = 0
        gameFindAPairInfo.textContent = `–æ—Å—Ç–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–∞—Ä: ${pairsRemainToMatch}`
        renderCards("ru")
        renderCards("eng")
    }
}

gameFindAPairButtonSkipThese.addEventListener("click", nextCardsGameFindAPairCheatUsed)
gameFindPairsTryAgainButton.addEventListener("click", startGameFindPairs)
gameFindAPairButtonBackToMissions.addEventListener("click", () => {
    backToTheVeryFirstScreen()
})
gameFindAPairButtonNotUsed.addEventListener("click", () => {
    console.log("–∑–∞—á–µ–º —Ç—ã —Å—é–¥–∞ –Ω–∞–∂–∞–ª?")
})

// –≤—ã—à–µ –≤—Å–µ –¥–ª—è –∏–≥—Ä—ã find pairs find a pair





// –Ω–∏–∂–µ –≤—Å–µ –¥–ª—è –∏–≥—Ä—ã questions let's speak ask me –Ω–∏–∂–µ –≤—Å–µ –¥–ª—è –∏–≥—Ä—ã questions let's speak ask me –Ω–∏–∂–µ –≤—Å–µ –¥–ª—è –∏–≥—Ä—ã questions let's speak ask me
const letsSpeak = document.querySelector(".popupMissionsAndSets__letsSpeak")

let languageRu = false

letsSpeak.addEventListener("click", startGameQuestions)
clickTest.classList.add("none")
function startGameQuestions() {
    body.classList.add("BenderWordOrderGameBackgroundPicture")

    // replaceHeaderButton1()


    // backToChoosingTheMissions.classList.add("opacityZero")
    // resetPageButton.classList.add("opacityZero")
    oneDeckButtons.classList.add("visible")
    fryFuturamaMainScreenIntro.classList.add("noshow")
    userSearchesForMission.classList.add("none")
    // usedCheatsText.textContent = `–ó–∞–º–µ—Ç–∏–ª–∏ –æ–ø–µ—á–∞—Ç–∫—É, –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç—å –∏–ª–∏ –Ω—É–∂–µ–Ω –ø–µ—Ä–µ–≤–æ–¥?  –°–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º: @vismyfriend ${howManyTimesSkipped}`
    // usedCheatsText.classList.add("visible")
    // —Å–ø—Ä–æ—Å–∏—Ç—å —É—Ç–æ—á–Ω–∏—Ç—å –∫–∞–∫ –¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ –≤ Java? <br> —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ HTML ( /n —Ç–æ–∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç) ${<br/>}
    usedCheatsText.textContent = `–ï—Å–ª–∏ –∑–∞–º–µ—Ç–∏—Ç–µ –æ–ø–µ—á–∞—Ç–∫—É, —Å–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–∏—á–µ—Ä—É –≤ —Ç–µ–ª–µ–≥—Ä–∞–º: @vismyfriend`
    // usedCheatsText.textContent = `–Ω–∞–∂–∏–º–∞–π –Ω–∞ –∫–∞—Ä—Ç—É –∏–∑ –∫–æ–ª–æ–¥—ã –∏ —á–∏—Ç–∞–π –≤—Å–ª—É—Ö:`
    usedCheatsText.classList.add("visible")
    oneDeckButtonText.classList.add("visible")
    popupMissionsAndSets.classList.add("close")
    cardForSpeakingGame.classList.remove("hiddenDeck")
    // interval = setInterval(startTimer, 10);
}

oneDeckButtonPrevious.addEventListener("click", shuffleDecks, startGameQuestions)

function shuffleDecks() {
    chooseQuestions = chooseQuestions.sort(function () {
        return Math.random() - 0.5;
    });
    questionNumber = 0
    cardForSpeakingGame.classList.remove("AnOpenCard")
    cardForSpeakingGame.style.border = 'none';
    switchPlayerInCardGameQuestions1()
}

function previousQuestion() {
    // console.log("–ø—Ä–æ—à–ª—ã–π –≤–æ–ø—Ä–æ—Å", value.ru)
    questionNumber = questionNumber - 2
    getquestions()
}

function getquestions() {
    // usedCheatsText.textContent = `1¬†) –¢—ã —á–∏—Ç–∞–µ—à—å, —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –æ—Ç–≤–µ—á–∞–µ—Ç / –≤—ã–ø–æ–ª–Ω—è–µ—Ç. 2¬†) –ù—É–∂–µ–Ω –ø–µ—Ä–µ–≤–æ–¥? - –Ω–∞–∂–º–∏ –Ω–∞ —Ä–∞–∑–º—ã—Ç—ã–π —Ç–µ–∫—Å—Ç. 
    // 3¬†) –ö—Ç–æ –æ—Ç–≤–µ—á–∞–ª, —Ç–æ—Ç –∑–∞–¥–∞—ë—Ç —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å . –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –ø–æ–≤—Ç–æ—Ä–∏–ª—Å—è¬† - ¬†–ø–æ–≤—Ç–æ—Ä—è–π¬†! –¢—Ä–µ–Ω–∏—Ä—É–π—Ç–µ—Å—å¬†–º–Ω–æ–≥–æ —Ä–∞–∑ –≥–æ–≤–æ—Ä–∏—Ç—å –æ–¥–Ω–æ –∏ —Ç–æ–∂–µ. It¬†is¬†life.¬†–ö—Ç–æ —Å–∫–∞–∂–µ—Ç: "—ç—Ç–æ —É–∂–µ –±—ã–ª–æ", —Ç–æ—Ç –ª—É–∑–µ—Ä! `
    // usedCheatsText.textContent = ` –ü—Ä–∞–≤–∏–ª–æ 1: –ö—Ç–æ —Å–∫–∞–∂–µ—Ç: "–≠—Ç–æ —É–∂–µ –±—ã–ª–æ", —Ç–æ—Ç –ª—É–∑–µ—Ä! –ü—Ä–∞–≤–∏–ª–æ 2: –ß–∏—Ç–∞–π –≤—Å–ª—É—Ö, —á—Ç–æ –Ω–∞–ø–∏—Å–∞–Ω–æ, –Ω–∞–ø–∞—Ä–Ω–∏–∫ –æ—Ç–≤–µ—á–∞–µ—Ç –∏–ª–∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç. –ß—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç –∏–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞–∂–º–∏ –Ω–∞ —Ä–∞–∑–º—ã—Ç—ã–π —Ç–µ–∫—Å—Ç. –ö—Ç–æ —Å–∫–∞–∂–µ—Ç: "–≠—Ç–æ —É–∂–µ –±—ã–ª–æ", —Ç–æ—Ç –ª—É–∑–µ—Ä! `
    // usedCheatsText.textContent = ` –ó–∞–¥–∞–Ω–∏–µ –Ω–∞–ø–∏—Å–∞–Ω–æ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ. –ß—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç –∏–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞–∂–º–∏ –Ω–∞ —Ä–∞–∑–º—ã—Ç—ã–π —Ç–µ–∫—Å—Ç. –ö—Ç–æ —Å–∫–∞–∂–µ—Ç: "–≠—Ç–æ —É–∂–µ –±—ã–ª–æ", —Ç–æ—Ç –ª—É–∑–µ—Ä! `
    // usedCheatsText.textContent = ` –ó–∞–¥–∞–Ω–∏–µ : –¢—ã —á–∏—Ç–∞–µ—à—å —Ç–µ–∫—Å—Ç –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ –≤—Å–ª—É—Ö. –¢–≤–æ–π¬†–Ω–∞–ø–∞—Ä–Ω–∏–∫ –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–µ–±–µ. –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞–∂–º–∏ –Ω–∏–∂–µ (–Ω–∞ —Ä–∞–∑–º—ã—Ç—ã–π —Ç–µ–∫—Å—Ç) –°–ª–µ–¥—É—é—â—É—é –∫–∞—Ä—Ç–æ—á–∫—É —á–∏—Ç–∞–µ—Ç —Ç–≤–æ–π –Ω–∞–ø–∞—Ä–Ω–∏–∫`
    usedCheatsText.textContent = ` –ß–∏—Ç–∞–π –≤—Å–ª—É—Ö. –£–≤–µ—Ä–µ–Ω–Ω–æ –∏ –±—ã—Å—Ç—Ä–æ. –Ω–∞¬†–û–î–ù–û–ú¬†–¥—ã—Ö–∞–Ω–∏–∏¬†–ù–ï-–ü–û-–°–õ–û-–ì–ê–ú  `

    // backToChoosingTheMissions.classList.remove("opacityZero")
    // resetPageButton.classList.remove("opacityZero")
    if (questionNumber < chooseQuestions.length) {
        cardForSpeakingGame.classList.remove("AnOpenCard")
        setTimeout(function () { cardForSpeakingGame.classList.add("AnOpenCard") }, 0);
        value = chooseQuestions[questionNumber]
        bottomOfTheCard1Value.classList.remove("Unblur")
        if (value.eng[0] === "/") {

            // / –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç img
            let imgTag = document.createElement("img");
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç src
            imgTag.src = value.eng;
            // –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ topOfTheCard1Value, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            topOfTheCard1Value.innerHTML = "";
            // –î–æ–±–∞–≤–ª—è–µ–º imgTag –≤ topOfTheCard1Value
            topOfTheCard1Value.appendChild(imgTag);

            // topOfTheCard1Value.textContent = `<img src="${value.eng}">`
            // let imgTag = document.createElement("img")
            // topOfTheCard1Value.appendChild(imgTag)


        } else {

            topOfTheCard1Value.textContent = languageRu ? value.ru : value.eng
        }
        bottomOfTheCard1Value.textContent = languageRu ? value.eng : value.ru
        cardForSpeakingGame.style.border = "solid 4px rgb(123, 207, 255)";
        questionNumber = questionNumber + 1
        oneDeckButtonText.textContent = "–ë—ã—Å—Ç—Ä–æ —Å–ø—Ä–æ—Å–∏–ª–∏, —á—ë—Ç–∫–æ –æ—Ç–≤–µ—Ç–∏–ª–∏. –ê–≤—Ç–æ–º–∞—Ç–∏–∑–º –ø—Ä–∞–∫—Ç–∏–∫—É–µ–º, –Ω–µ —Ç–æ—Ä–º–æ–∑–∏–º, –ø–æ–º–æ–≥–∞–µ–º –¥—Ä—É–≥ –¥—Ä—É–≥—É, –∑–∞–º–µ—á–∞–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫–∏ –Ω–∞–ø–∞—Ä–Ω–∏–∫–æ–≤"
        console.log(value.eng[0] === "/")
        // console.log(value.ru[0])
        // –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –∏–∑ —Å—Ç—Ä–æ–∫–∏
    } else {
        cardForSpeakingGame.classList.remove("AnOpenCard")
        cardForSpeakingGame.style.border = 'none';
        shuffleDecks()
    }
}

bottomOfTheCard1Value.addEventListener("click", (event) => {
    bottomOfTheCard1Value.classList.toggle("Unblur")
    event.stopPropagation()
})

oneDeckButtonCheck.addEventListener("click", () => {
    previousQuestion()
})

function switchLanguage() {
    getquestions()
    // cardForSpeakingGame.classList.add("column-reverse") —É—Ç–æ—á–Ω–∏—Ç—å —á—Ç–æ —Ç–∞–∫–æ–µ
    // –∏ —É—Ç–æ—á–Ω–∏—Ç—å –∫–∞–∫ –Ω–∏–∂–µ —á–∏—Ç–∞–µ—Ç—Å—è –∫–æ–¥ =! (–ù–µ —Ä–∞–≤–µ–Ω —Å–∞–º–æ–º—É —Å–µ–±–µ)
    languageRu = !languageRu
    topOfTheCard1Value.textContent = languageRu ? value.ru : value.eng
    bottomOfTheCard1Value.textContent = languageRu ? value.eng : value.ru
    // cardForSpeakingGame.style.border = "solid 4px rgb(128, 255, 1)";
}

// —É—Ç–æ—á–Ω–∏—Ç—å –∫–∞–∫ toggle —Å–¥–µ–ª–∞—Ç—å –∏–ª–∏ –≤—Ä–æ–¥–µ —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–∞–∂–∞—Ç–∏–∏ –º–µ–Ω—è–ª—Å—è —Ç–µ—Å–∫—Å –Ω–∞ –∫–Ω–æ–ø–∫–µ
function switchPlayerInCardGameQuestions1() {
    oneDeckButtonSwitch.textContent = ("—á–µ–≥–æ –±–ª–∏–Ω?")
}
function switchPlayerInCardGameQuestions2() {
    oneDeckButtonSwitch.textContent = ("–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —è–∑—ã–∫ RU-ENG")
}
// oneDeckButtonSwitch.addEventListener("click", () => switchLanguage())

oneDeckButtonSwitch.addEventListener("click", () => {
    switchLanguage()
    switchPlayerInCardGameQuestions2()
})

cardForSpeakingGame.addEventListener("click", () => {
    const AudioNextQuestionCard = new Audio("https://zvukitop.com/wp-content/uploads/2021/06/klik-myshki-9.mp3");
    AudioNextQuestionCard.volume = 0.07
    AudioNextQuestionCard.play()
    cardForSpeakingGame.classList.contains("open") ? null : getquestions()
})

oneDeckButtonNext.addEventListener("click", () => {
    const AudioNextQuestionCard = new Audio("https://zvukitop.com/wp-content/uploads/2021/06/klik-myshki-9.mp3");
    AudioNextQuestionCard.volume = 0.07
    AudioNextQuestionCard.play()
    cardForSpeakingGame.classList.contains("open") ? null : getquestions()
})
// –≤—ã—à–µ –≤—Å–µ –¥–ª—è –∏–≥—Ä—ã questions let's speak ask me






// –Ω–∏–∂–µ –∏–≥—Ä–∞ —Å–ª–æ—Ç –º–∞—à–∏–Ω–∞ slot machine 
const slotMachine = document.querySelector(".popupMissionsAndSets__slot-machine")

slotMachine.addEventListener("click", startGameSlotMachine)

function startGameSlotMachine() {
    location.href = "https://bababum95.github.io/vinchento/slot-machine.html"
}
// –≤—ã—à–µ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∏–≥—Ä—É slot machine 






// –Ω–∏–∂–µ –≤—Å–µ –¥–ª—è –∏–≥—Ä—ã BenderWordOrderGame

const benderWordOrderGameTask = document.querySelector(".BenderWordOrderGameTask-eng")
const BenderWordOrderGameContainerOne = document.querySelector(".BenderWordOrderGameContainer-one")

const gameBender = document.querySelector(".gameBender")
const BenderWordOrderGameButton = document.querySelector(".popupMissionsAndSets__BenderWordOrderGame")
const BenderWordOrderGameButtonBackToMissions = document.querySelector(".BenderWordOrderGameButtonBackToMissions")
const wordGameBenderWordOrderGame = document.querySelector(".BenderWordOrderGameTemplate").content.querySelector(".BenderWordOrderGameWord")
const wordsContainerGameBenderWordOrderGame = document.querySelector(".BenderWordOrderGameWords")
const inputSentenceGameBenderWordOrderGame = document.querySelector(".BenderWordOrderGameInput-sentence")
const hintGameBenderWordOrderGame = document.querySelector(".BenderWordOrderGameHint")
const russianHintGameBenderWordOrderGame = document.querySelector(".BenderWordOrderGameHint-input")
const cheatGameBenderWordOrderGame = document.querySelector(".BenderWordOrderGameCheat")
const containerMistakeGameBenderWordOrderGame = document.querySelector(".BenderWordOrderGameContainer-mistake")
const correctAnswerGameBenderWordOrderGame = document.querySelector(".BenderWordOrderGameSentence-correct")
const userAnswerGameBenderWordOrderGame = document.querySelector(".BenderWordOrderGameUser-answer")
const russianHintMistakeGameBenderWordOrderGame = document.querySelector(".BenderWordOrderGameRussian-hint")
const fairGameBenderWordOrderGame = document.querySelector(".BenderWordOrderGameFair")
const unfairGameBenderWordOrderGame = document.querySelector(".BenderWordOrderGameUnfair")
const screenshotGameBenderWordOrderGame = document.querySelector(".BenderWordOrderGameScreenshot")
const livesGameBenderWordOrderGame = document.querySelector(".BenderWordOrderGameLives")
const pointsGameBenderWordOrderGame = document.querySelector(".BenderWordOrderGameCorrect-counter")
const typeOrWriteGame–°ounter = document.querySelector(".typeOrWriteGame-counter")
let scoreGameBenderWordOrderGame = 0
let scoreTypeOrWriteGame = 0
let scoreTNTGame = 0
let scrambledscoreTNTGame = 0
let lifeGameBenderWordOrderGame = 5
// —É–º–µ–Ω—å—à–∞—è –∂–∏–∑–Ω–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å width
let n = -1

// —Ä–∞–Ω—å—à–µ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –±—ã–ª–∞ –∏–≥—Ä–∞, –∑–∞–∫–æ–º–µ–Ω—Ç–∏–ª, —á—Ç–æ–±—ã –Ω–µ –∑–∞–±—ã—Ç—å –∫–∞–∫ —Å—Å—ã–ª–∫–∏ –≤—Å—Ç–∞–≤–ª—è—Ç—å
// function startGameRobotBender() {
//     location.href = "https://vismyfriend.github.io/Bender/"
// }

function startGameBenderWordOrderGame() {
    lifeGameBenderWordOrderGame = 5
    livesGameBenderWordOrderGame.style.width = `${lifeGameBenderWordOrderGame * 31}px`
    wordsContainerGameBenderWordOrderGame.innerHTML = ""
    inputSentenceGameBenderWordOrderGame.textContent = ""
    pointsGameBenderWordOrderGame.classList.add("none")

    mainContainerIntroAnd2games.classList.add("none")
    gameBender.classList.remove("none")
    userSearchesForMission.classList.add("none")
    gameTrickyQuiz.classList.add("none")
    body.classList.add("BenderWordOrderGameBackgroundPicture")
    renderWordsGameBenderWordOrderGame()
    russianHintGameBenderWordOrderGame.textContent = benderWordOrderSentences[currentSet][n].ru
}

// BenderWordOrderGameButtonBackToMissions.addEventListener("click", pageReloadRefresh)
BenderWordOrderGameButton.addEventListener("click", startGameBenderWordOrderGame)


// –ø–µ—Ä–µ–¥–∞–µ–º set —á—Ç–æ–±—ã bender –ø–æ–Ω–∏–º–∞–ª –≤ –∫–∞–∫–æ–º –æ–Ω –Ω–∞–±–æ—Ä–µ
function renderWordsGameBenderWordOrderGame() {
    // russianHintGameBenderWordOrderGame.textContent = "–ë–µ–∑ —Ä—É—Å—Å–∫–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ –ø–æ–ø—Ä–æ–±—É–π –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤"
    russianHintGameBenderWordOrderGame.textContent = "–ù–∞–∂–∏–º–∞–π –Ω–∞ —Å–ª–æ–≤–∞ –∏–ª–∏ –±—É–∫–≤—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ"
    n = n + 1
    // russianHintGameBenderWordOrderGame.textContent = benderWordOrderSentences[currentSet][n].ru
    // console.log(life)
    // const sentenceGameBenderWordOrderGame = testGameBenderWordOrderGame[n].eng
    const sentenceGameBenderWordOrderGame = benderWordOrderSentences[currentSet][n].eng
    // —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞—Ç—å —Å–ª–æ–≤–∞ –≤ –Ω–µ–º
    console.log(sentenceGameBenderWordOrderGame)
    let shuffleSentenceGameBenderWordOrderGame = sentenceGameBenderWordOrderGame.split(' ').sort(function () {
        return Math.random() - 0.5;
    });

    shuffleSentenceGameBenderWordOrderGame.forEach(element => {
        const cloneWordGameBenderWordOrderGame = wordGameBenderWordOrderGame.cloneNode(true)
        cloneWordGameBenderWordOrderGame.textContent = element
        cloneWordGameBenderWordOrderGame.addEventListener("click", () => {
            if (cloneWordGameBenderWordOrderGame.classList.contains("pressed")) {
                cloneWordGameBenderWordOrderGame.classList.remove("pressed")
                inputSentenceGameBenderWordOrderGame.textContent = inputSentenceGameBenderWordOrderGame.textContent.replace(" " + element, "")
            } else {
                cloneWordGameBenderWordOrderGame.classList.add("pressed")
                inputSentenceGameBenderWordOrderGame.textContent += " " + element
                if (inputSentenceGameBenderWordOrderGame.textContent.length === sentenceGameBenderWordOrderGame.length + 1) {
                    if (inputSentenceGameBenderWordOrderGame.textContent === " " + sentenceGameBenderWordOrderGame) {
                        // console.log("ok")
                        scoreGameBenderWordOrderGame += 1
                        // score = score + 1
                        pointsGameBenderWordOrderGame.classList.remove("none")

                        pointsGameBenderWordOrderGame.textContent = `–≤–µ—Ä–Ω–æ:  ${scoreGameBenderWordOrderGame} / ${benderWordOrderSentences[currentSet].length}`
                        nextSentenceGameBenderWordOrderGame()
                    } else {
                        russianHintMistakeGameBenderWordOrderGame.textContent = benderWordOrderSentences[currentSet][n].ru
                        correctAnswerGameBenderWordOrderGame.textContent = `–†–æ–±–æ—Ç –Ω–∞–ø–∏—Å–∞–ª —Ç–∞–∫ : ${sentenceGameBenderWordOrderGame}`
                        userAnswerGameBenderWordOrderGame.textContent = `–ê –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏ —Ç–∞–∫ : ${inputSentenceGameBenderWordOrderGame.textContent}`
                        userAnswerGameBenderWordOrderGame.classList.add("wrong")
                        containerMistakeGameBenderWordOrderGame.classList.add("show")
                        lifeGameBenderWordOrderGame = lifeGameBenderWordOrderGame - 1
                        livesGameBenderWordOrderGame.style.width = `${lifeGameBenderWordOrderGame * 31}px`
                        unfairGameBenderWordOrderGame.disabled = false
                        screenshotGameBenderWordOrderGame.classList.add("hide")
                        // –°–Ω–æ–≤–∞ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –æ—Ç –≠–Ω–¥—Ä—é
                        // –¢—É—Ç –í–µ–ª–∏–∫–∏–π –≠–Ω–¥—Ä—é —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –í–µ–ª–∏—á–∞–π—à–µ–≥–æ –≥—É–≥–ª–∞ –∫–∞–∫ –∑–∞–¥–∞–≤–∞—Ç—å —Å—Ç–∏–ª–∏ —á–µ—Ä–µ–∑ java
                    }
                }
            }
        })
        // —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Ñ—É–Ω–∫—Ü–∏–∏
        wordsContainerGameBenderWordOrderGame.prepend(cloneWordGameBenderWordOrderGame)
    });
}

function gameOverGameBenderWordOrderGame() {
    inputSentenceGameBenderWordOrderGame.textContent = `–ö—Ä—É—Ç–µ—Ü-–º–æ–ª–æ–¥–µ—Ü! –¢—ã¬†–ø–æ–º–æ–≥ –ë–µ–Ω–¥–µ—Ä—É with his¬†English! –ü–æ–¥–µ–ª–∏—Å—å —Ñ–æ—Ç–∫–æ–π —ç—Ç–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å –í–∏–Ω—Å–µ–Ω—Ç–æ–º`
    russianHintGameBenderWordOrderGame.textContent = `–≤–µ—Ä–Ω–æ:  ${scoreGameBenderWordOrderGame} / ${benderWordOrderSentences[currentSet].length}`
    // –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–∫–∞ –ø–æ—á–µ–º—É-—Ç–æ
    // benderWordOrderGameTask.textContent = "My achievement :"
    // console.log(benderWordOrderGameTask.textContent)
}
function nextSentenceGameBenderWordOrderGame() {
    wordsContainerGameBenderWordOrderGame.innerHTML = ""
    inputSentenceGameBenderWordOrderGame.textContent = ""
    if (n === benderWordOrderSentences[currentSet].length - 1) {
        gameOverGameBenderWordOrderGame()
    } else {
        renderWordsGameBenderWordOrderGame()
    }
}

unfairGameBenderWordOrderGame.addEventListener("click", () => {
    unfairGameBenderWordOrderGame.disabled = true
    fairGameBenderWordOrderGame.disabled = true
    screenshotGameBenderWordOrderGame.classList.remove("hide")
    lifeGameBenderWordOrderGame = lifeGameBenderWordOrderGame + 1
    livesGameBenderWordOrderGame.style.width = `${lifeGameBenderWordOrderGame * 31}px`
    unfairGameBenderWordOrderGame.disabled = true
})

fairGameBenderWordOrderGame.addEventListener("click", () => {
    containerMistakeGameBenderWordOrderGame.classList.remove("show")
    if (lifeGameBenderWordOrderGame === 0) {
        gameOverGameBenderWordOrderGame()
    } else {
        nextSentenceGameBenderWordOrderGame()
    }
})

screenshotGameBenderWordOrderGame.addEventListener("click", () => {
    containerMistakeGameBenderWordOrderGame.classList.remove("show")
    fairGameBenderWordOrderGame.disabled = false
    if (lifeGameBenderWordOrderGame === 0) {
        gameOverGameBenderWordOrderGame()
    } else {
        nextSentenceGameBenderWordOrderGame()
    }
})

hintGameBenderWordOrderGame.addEventListener("click", () => {
    russianHintGameBenderWordOrderGame.textContent = benderWordOrderSentences[currentSet][n].ru
    setTimeout(() => {
        russianHintGameBenderWordOrderGame.textContent = "–Ω–∞–∂–∏–º–∞–π —Å–ª–æ–≤–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –æ—à–∏–±–∞—Ç—å—Å—è –º–æ–∂–Ω–æ! –î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏ –Ω–∞ —Å–ª–æ–≤–æ —Å–Ω–æ–≤–∞"
    }, 4000)
})

cheatGameBenderWordOrderGame.addEventListener("click", () => {
    // russianHintGameBenderWordOrderGame.textContent = benderWordOrderSentences[currentSet][n].eng
    russianHintGameBenderWordOrderGame.textContent = benderWordOrderSentences[currentSet][n].eng

    setTimeout(() => {
        russianHintGameBenderWordOrderGame.textContent = "–Ω–∞–∂–∏–º–∞–π —Å–ª–æ–≤–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –æ—à–∏–±–∞—Ç—å—Å—è –º–æ–∂–Ω–æ! –î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏ –Ω–∞ —Å–ª–æ–≤–æ —Å–Ω–æ–≤–∞"
    }, 4000)
    // –º–∏–ª–∏—Å–µ–∫—É–Ω–¥—ã 
})

// –≤—ã—à–µ –≤—Å–µ –¥–ª—è –∏–≥—Ä—ã BenderWordOrderGame





// –Ω–∏–∂–µ spelling game TypeOrWrite –ø—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ —Å–∫–æ—Ä–æ –≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω—é –µ–µ –Ω–∞ –±–æ–º–±—É –∏–≥—Ä—É –ø—Ä–æ –≤–∑—Ä—ã–≤—á–∞—Ç–∫—É (–∏–ª–∏ —É–∂–µ –∑–∞–º–µ–Ω–∏–ª)
const InputTypeOrWriteGame = document.querySelector(".popupMissionsAndSets__InputTypeOrWriteGame")
const typeOrWriteGameButtonIDK = document.querySelector(".typeOrWriteGameButtonIDK")
const typeOrWriteGameButtonSkip = document.querySelector(".typeOrWriteGameButtonSkip")
const inputTitleEng = document.querySelector(".inputTitleEng")
const playerInputType = document.querySelector(".playerInputType")
const typeOrWriteGameButtonCompare = document.querySelector(".typeOrWriteGameButtonCompare")

function startGameInputTypeOrWriteGame() {

    mainContainerIntroAnd2games.classList.add("none")
    gameBender.classList.add("none")
    gameTypeOrWrite.classList.remove("none")
    gameTrickyQuiz.classList.add("none")
    userSearchesForMission.classList.add("none")
    body.classList.remove("BenderWordOrderGameBackgroundPicture")
    value = chooseTypeOrWrite[typeOrWriteNumber]
    inputTitleEng.textContent = value.ru
    typeOrWriteGameButtonCompare.addEventListener("click", compareInput)
}

InputTypeOrWriteGame.addEventListener("click", startGameInputTypeOrWriteGame)

function nextWordToTranslate(inputPlaceholder) {
    typeOrWriteNumber = typeOrWriteNumber + 1
    value = chooseTypeOrWrite[typeOrWriteNumber]

    if (value) {
        inputPlaceholder.innerHTML = value.ru
    } else {
        inputTitleEng.textContent = `–í—ã —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ¬†–¥—Ä—É–≥–æ–π¬†–Ω–∞–±–æ—Ä¬†—Å–ª–æ–≤`
        typeOrWriteGame–°ounter.textContent = `(${scoreTypeOrWriteGame} –∏–∑ ${chooseTypeOrWrite.length}) Correct ${scoreTypeOrWriteGame} out of ${chooseTypeOrWrite.length}`
    }
    // inputPlaceholder.classList.add("none")
    // playerInputType.textContent = `–≤—ã –ø–µ—Ä–µ–≤–µ–ª–∏:  ${scoreTypeOrWriteGame} –∏–∑ ${chooseTypeOrWrite.length}`
}

function compareInput() {
    if (playerInputType.value.toLowerCase() === value.eng.toLowerCase()) {
        nextWordToTranslate(inputTitleEng)
        playerInputType.value = ""
        scoreTypeOrWriteGame += 1
        keySoundInputOk.play()
        typeOrWriteGame–°ounter.textContent = `–≤–µ—Ä–Ω–æ:  ${scoreTypeOrWriteGame} out of ${chooseTypeOrWrite.length}`
        typeOrWriteGame–°ounter.classList.add("green")
    } else {
        typeOrWriteGame–°ounter.textContent = `–•–º–º...ü§∑üèΩ‚Äç‚ôÇÔ∏è –º–æ–∂–µ—Ç –æ–ø–µ—á–∞—Ç–∫–∞ –∏–ª–∏ –ª–∏—à–Ω–∏–π –ø—Ä–æ–±–µ–ª? –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑. –ò–ª–∏ —Å–¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ. Thank¬†you. –ü–æ—Ç–æ–º –Ω–∞–∂–º–∏ skip`
        typeOrWriteGame–°ounter.classList.remove("green")
    }
}

function typeOrWriteGameSkip() {
    nextWordToTranslate(inputTitleEng)
    playerInputType.value = ""
}

typeOrWriteGameButtonSkip.addEventListener("click", typeOrWriteGameSkip)

typeOrWriteGameButtonIDK.addEventListener("click", () => {
    typeOrWriteGame–°ounter.textContent = `The answer is   <<¬†${value.eng}¬†>> `
    setTimeout(() => {
        typeOrWriteGame–°ounter.textContent = `–≤–µ—Ä–Ω–æ:  ${scoreTypeOrWriteGame} out of ${chooseTypeOrWrite.length}`
    }, 2000)
})

// –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
const oneDeckButtons = document.querySelector(".oneDeckButtons")
const keyQ = document.querySelector(".keyQ")
const keyW = document.querySelector(".keyW")
const keyE = document.querySelector(".keyE")
const keyR = document.querySelector(".keyR")
const keyT = document.querySelector(".keyT")
const keyY = document.querySelector(".keyY")
const keyU = document.querySelector(".keyU")
const keyI = document.querySelector(".keyI")
const keyO = document.querySelector(".keyO")
const keyP = document.querySelector(".keyP")
const keyA = document.querySelector(".keyA")
const keyS = document.querySelector(".keyS")
const keyD = document.querySelector(".keyD")
const keyF = document.querySelector(".keyF")
const keyG = document.querySelector(".keyG")
const keyH = document.querySelector(".keyH")
const keyJ = document.querySelector(".keyJ")
const keyK = document.querySelector(".keyK")
const keyL = document.querySelector(".keyL")
const keyOpostrophy = document.querySelector(".keyOpostrophy")
const keyZ = document.querySelector(".keyZ")
const keyX = document.querySelector(".keyX")
const keyC = document.querySelector(".keyC")
const keyV = document.querySelector(".keyV")
const keyB = document.querySelector(".keyB")
const keyN = document.querySelector(".keyN")
const keyM = document.querySelector(".keyM")
const keyQuestion = document.querySelector(".keyQuestion")
const keyDeleteLastSymbol = document.querySelector(".keyDeleteLastSymbol")
const keyDel = document.querySelector(".keyDel")
const keySpaceBar = document.querySelector(".keySpaceBar")

keyQ.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "Q"
})
keyW.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "W"
})
keyE.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "E"
})
keyR.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "R"
})
keyT.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "T"
})
keyY.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "Y"
})
keyU.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "U"
})
keyI.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "I"
})
keyO.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "O"
})
keyP.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "P"
})
keyA.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "A"
})
keyS.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "S"
})
keyD.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "D"
})
keyF.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "F"
})
keyG.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "G"
})
keyH.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "H"
})
keyJ.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "J"
})
keyK.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "K"
})
keyL.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "L"
})
keyZ.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "Z"
})
keyOpostrophy.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "'"
})
keyX.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "X"
})
keyC.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "C"
})
keyV.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "V"
})
keyB.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "B"
})
keyN.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "N"
})
keyM.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "M"
})
keyQuestion.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + "?"
    // keySoundInput?.stop()
    keySoundInput.play()
})
keyDel.addEventListener("click", () => {
    TNTuserInput.value = ""
    // keySoundInput?.stop()
    keySoundInput.play()
})
keySpaceBar.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value + " "
    // keySoundInput.stop()
    keySoundInput.play()
})

keyDeleteLastSymbol.addEventListener("click", () => {
    TNTuserInput.value = TNTuserInput.value.substring(0, TNTuserInput.value.length - 1);
    const keyDelSoundInput = new Audio("https://zvukitop.com/wp-content/uploads/2021/01/najatie-na-klaviaturu-iphone.mp3");
    keyDelSoundInput.volume = 0.08
    keyDelSoundInput.play()
})
// –≤—ã—à–µ spelling game –ø—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ



//–Ω–æ–≤–∞—è –∏–≥—Ä–∞ –ø—Ä–æ –±–æ–º–±—É TNT –Ω–∏–∂–µ

let TNTtimerMechanics
let TNTbeforeExplosion = 30
let TNTtimerFormat

const gameTNT = document.querySelector(".TNTgameContainer")
const startGameTNTbutton = document.querySelector(".popupMissionsAndSets__startGameTNT")
const TNTgameTaskValue = document.querySelector(".TNTgameTaskValue")

startGameTNTbutton.addEventListener("click", startGameTNT)




const TNTtimer = document.querySelector(".TNTtimer")
const TNTbuttonCompare = document.querySelector(".TNTgameButtonCompare")
const TNTgameButtonStartAgain = document.querySelector(".TNTgameButtonStartAgain")
const TNTuserInput = document.querySelector(".TNTgamePlayerInputType")
const TNTgameTaskHint = document.querySelector(".TNTgameTaskHint")
const TNTgameInfo = document.querySelector(".TNTgameInfo")
const TNTgameCounter = document.querySelector(".TNTgame-counter")
const TNTgameButtonIDK = document.querySelector(".TNTgameButtonIDK")
const TNTgameButtonAnswer = document.querySelector(".TNTgameButtonAnswer")

TNTbuttonCompare.addEventListener("click", compareTNTinput)


function startGameTNT() {

    TNTtimer.textContent = `00:${TNTbeforeExplosion}`
    popupMissionsAndSets.classList.add("none")
    gameTNT.classList.remove("none")
    clickTest.classList.add("none")
    value = chooseTypeOrWrite[typeOrWriteNumber]
    TNTgameTaskValue.textContent = value.ru
    TNTgameCounter.classList.add("none")
    usedCheatsText.classList.remove("visible")
    clearInterval(TNTtimerMechanics)
    TNTstartTimer()
    TNTgameButtonIDK.classList.remove("none")
    TNTgameButtonAnswer.classList.add("none")
    TNTbuttonCompare.classList.remove("none")
    TNTbuttonCompare.classList.remove("none")
    TNTgameButtonStartAgain.classList.add("none")

    addEventListener("keyup", handleKeyup)
}

function TNTstartTimer() {
    TNTtimerMechanics = setInterval(() => {
        if (TNTbeforeExplosion <= 0) TNTgameover()

        // GREAT TIMER function by EGORCHIK!
        // % - –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è 
        TNTtimerFormat = `${Math.trunc(TNTbeforeExplosion / 60) > 9
            ? Math.trunc(TNTbeforeExplosion / 60)
            : '0' + Math.trunc(TNTbeforeExplosion / 60)}:${Math.trunc(TNTbeforeExplosion % 60) > 9
                ? Math.trunc(TNTbeforeExplosion % 60)
                : '0' + Math.trunc(TNTbeforeExplosion % 60)}`

        TNTtimer.textContent = TNTtimerFormat
        TNTbeforeExplosion--
    }, 1000) //1000 —ç—Ç–æ –æ–¥–Ω–∞ —Å–µ–∫—É–Ω–¥–∞ (–≤ –º–∏–ª–∏—Å–∫—É–Ω–¥–∞)
}
function TNTgameover() {
    TNTgameInfo.textContent = "Büí•üí•m!"
    clearInterval(TNTtimerMechanics)
    TNTgameTaskHint.textContent = `–æ–±–µ–∑–≤—Ä–µ–∂–µ–Ω–æ :  ${scoreTNTGame} out of ${chooseTypeOrWrite.length} bombs`
    TNTgameTaskValue.textContent = `—Å–¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ –ø–æ–¥–µ–ª–∏—Å—å —Å –í–∏–Ω—Å–µ–Ω—Ç–æ–º`
    // TNTuserInput.value = `or üëá deactivate more`
    TNTuserInput.value = `üß® –∏–ª–∏ –æ–±–µ–∑–≤—Ä–µ–¥—å –±–æ–ª—å—à–µ üß®`
    TNTbuttonCompare.classList.add("none")
    TNTgameButtonStartAgain.classList.remove("none")
    TNTgameCounter.classList.add("none")
    TNTuserInput.classList.remove("underlinedText")
    // TNTgameTaskHint.innerHTML = `–ø–æ–ø—Ä–æ–±—É–π –æ–±–µ–∑–≤—Ä–µ–¥–∏—Ç—å –≤—Å–µ`

}

function compareTNTinput() {
    // console.log("–æ—Ç–≤–µ—Ç", value.eng)
    // console.log(TNTuserInput)

    if (TNTuserInput.value.toLowerCase() === value.eng.toLowerCase()) {

        //  scoreTNTGame += 1
        scoreTNTGame++
        TNTbeforeExplosion += 12
        TNTgameCounter.classList.remove("none")
        TNTuserInput.value = ""
        // typeOrWriteGame–°ounter.textContent = `–≤–µ—Ä–Ω–æ:  ${scoreTNTGame} out of ${chooseTypeOrWrite.length}`
        // typeOrWriteGame–°ounter.classList.add("green")
        TNTgameTaskHint.innerHTML = `YES! + 12 seconds! –û–±–µ–∑–≤—Ä–µ–∂–∏–≤–∞–π —Å–ª–µ–¥—É—é—â—É—é, –∫–∞–∫¬†–ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è:`
        TNTgameTaskHint.classList.remove("red")
        TNTgameTaskHint.classList.add("green")
        tntGameNextWordToTranslate(TNTgameTaskValue)
        keySoundInputOk.play()
        TNTuserInput.classList.remove("underlinedText")
    }
    else {
        TNTgameTaskHint.classList.remove("green")
        TNTgameTaskHint.classList.remove("yellow")
        TNTgameTaskHint.classList.add("red")
        TNTuserInput.classList.add("underlinedText")

        TNTgameTaskHint.textContent = "–Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç... –ø—Ä–æ–≤–µ—Ä—å –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å —Å–∫—Ä–∏–Ω—à–æ—Ç –í–∏–Ω—Å–µ–Ω—Ç—É"




    }

}


function tntGameNextWordToTranslate(TNTgameTaskValue) {
    typeOrWriteNumber = typeOrWriteNumber + 1
    value = chooseTypeOrWrite[typeOrWriteNumber]
    TNTgameButtonIDK.classList.remove("none")
    TNTgameButtonAnswer.classList.add("none")
    if (value) {
        TNTgameTaskValue.innerHTML = value.ru
    } else {
        clearInterval(TNTtimerMechanics)
        TNTgameTaskHint.classList.add("yellow")
        TNTgameInfo.textContent = "–í—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å –≤ –∑–∞–ø–∞—Å–µ :"
        TNTgameTaskHint.textContent = "Super! –°–¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç –∏¬†–æ—Ç–ø—Ä–∞–≤—å¬†to¬†Vincent"
        TNTgameTaskValue.textContent = `I am the best agent`
        TNTuserInput.value = `deactivated all ${scoreTNTGame} bombs!`
        TNTbuttonCompare.classList.add("none")
        TNTgameButtonStartAgain.classList.remove("none")
    }
    // TNTgameTaskValue.classList.add("none")
    // TNTgameTaskHint.textContent = `–≤—ã –ø–µ—Ä–µ–≤–µ–ª–∏:  ${scoreTNTGame} –∏–∑ ${chooseTypeOrWrite.length}`
    TNTgameCounter.textContent = `–æ–±–µ–∑–≤—Ä–µ–∂–µ–Ω–æ –±–æ–º–±:  ${scoreTNTGame}`
}


// TNTgameButtonStartAgain.addEventListener("click", pageReloadRefresh)
TNTgameButtonStartAgain.addEventListener("click", restartTNTgame)

TNTgameButtonIDK.addEventListener("click", showHintTNT)

function showHintTNT() {
    if (value.hint === undefined) {

        TNTgameTaskHint.textContent = "ü§∑‚Äç‚ôÄÔ∏è –∑–¥–µ—Å—å –Ω–µ—á–µ–≥–æ –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å ü§∑‚Äç‚ôÇÔ∏è –ø—ã—Ç–∞–π—Å—è –∫–∞–∫-—Ç–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏"
        TNTgameTaskHint.classList.remove("red")
        TNTgameTaskHint.classList.remove("yellow")
        TNTgameTaskHint.classList.add("green")


    } else {
        // TNTgameTaskHint.textContent = "Okay , –≤–æ—Ç —Ç–∞–∫–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞ –µ—Å—Ç—å : " + value.hint
        TNTgameTaskHint.textContent = "–ë–ª–∏–Ω! –ö–∞–∫ –±—ã —Ç—É—Ç –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å-—Ç–æ : " + value.hint
        TNTgameTaskHint.classList.remove("red")
        TNTgameTaskHint.classList.remove("yellow")
        TNTgameTaskHint.classList.add("green")


    }
    TNTgameButtonAnswer.classList.remove("none")
    TNTgameButtonIDK.classList.add("none")
}

TNTgameButtonAnswer.addEventListener("click", showAnswerTNT)

function showAnswerTNT() {

    TNTgameButtonIDK.classList.remove("none")
    TNTgameButtonAnswer.classList.add("none")
    TNTgameTaskHint.classList.remove("green")
    TNTgameTaskHint.classList.remove("yellow")

    TNTgameTaskHint.textContent = "–°–∫–æ—Ä–µ–µ –≤–ø–∏—Å—ã–≤–∞–π –≤–æ—Ç —ç—Ç–æ—Ç –æ—Ç–≤–µ—Ç: " + value.eng
    // TNTgameTaskHint.textContent = "- 5 —Å–µ–∫—É–Ω–¥. PANIC !!! "
    // TNTgameTaskValue.textContent = value.ru + " –ë—ã—Å—Ç—Ä–µ–µ!!! –í–≤–æ–¥–∏ –æ—Ç–≤–µ—Ç : " + value.eng
    // TNTgameTaskValue.textContent = " –ë—ã—Å—Ç—Ä–µ–µ!!! –í–≤–æ–¥–∏ –æ—Ç–≤–µ—Ç : " + value.eng + " (" + value.ru + ")"
    TNTgameTaskValue.textContent = value.ru
    TNTbeforeExplosion -= 4

}


function restartTNTgame() {
    scoreTNTGame = 0
    typeOrWriteNumber = 0
    TNTbeforeExplosion = 53
    TNTgameInfo.textContent = "üß® –î–æ –≤–∑—Ä—ã–≤–∞ –æ—Å—Ç–∞–ª–æ—Å—å: üß®"
    TNTuserInput.value = ""
    TNTgameTaskHint.textContent = "–Ω–∞–ø–∏—à–∏ –ø–æ-–∞–Ω–≥–ª–∏–π—Å–∫–∏:"
    TNTgameTaskValue.textContent = `—Å–¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ –ø–æ–¥–µ–ª–∏—Å—å —Å –í–∏–Ω—Å–µ–Ω—Ç–æ–º`

    TNTbuttonCompare.classList.remove("none")
    TNTgameButtonStartAgain.classList.add("none")
    TNTgameCounter.classList.remove("none")
    TNTgameTaskHint.classList.remove("red")
    TNTgameTaskHint.classList.add("green")


    chooseTypeOrWrite = chooseTypeOrWrite.sort(function () {
        return Math.random() - 0.5;
    });
    removeEventListener("keyup", handleKeyup)
    startGameTNT()

}



//–Ω–æ–≤–∞—è –∏–≥—Ä–∞ –ø—Ä–æ –±–æ–º–±—É TNT –≤—ã—à–µ



// scrambledGame –Ω–∏–∂–µ
// –ë–õ–ò–ù! –ù–ê–≤–µ—Ä–Ω–æ–µ –Ω—É–∂–Ω–æ —ç—Ç–æ –±—ã–ª–æ –¥–µ–ª–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–º —Ñ–∞–π–ª–æ–º –∂–µ!! –ê –º–æ–∂–Ω–æ —ç—Ç–æ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –∫–∞–∫ –º—ã –¥–µ–ª–∞–ª–∏ —Å –ö–≤–∏–∑–æ–º?

let scrambledTNTtimerMechanics
let scrambledTNTbeforeExplosion = 1
let scrambledTNTtimerFormat

const scrambledgameTNT = document.querySelector(".scrambledTNTgameContainer")
const scrambledstartGameTNTbutton = document.querySelector(".popupMissionsAndSets__scrambledstartGameTNT")
const scrambledTNTgameTaskValue = document.querySelector(".scrambledTNTgameTaskValue")
const scrambledTNTgameScrambledPhraseValue = document.querySelector(".scrambledTNTgameScrambledPhraseValue")

scrambledstartGameTNTbutton.addEventListener("click", scrambledstartGameTNT)




const scrambledTNTtimer = document.querySelector(".scrambledTNTtimer")
const scrambledTNTbuttonCompare = document.querySelector(".scrambledTNTgameButtonCompare")
const scrambledTNTgameButtonStartAgain = document.querySelector(".scrambledTNTgameButtonStartAgain")
const scrambledTNTuserInput = document.querySelector(".scrambledTNTgamePlayerInputType")
const scrambledTNTgameTaskHint = document.querySelector(".scrambledTNTgameTaskHint")
const scrambledTNTgameInfo = document.querySelector(".scrambledTNTgameInfo")
const scrambledTNTgameCounter = document.querySelector(".scrambledTNTgame-counter")
const scrambledTNTgameButtonIDK = document.querySelector(".scrambledTNTgameButtonIDK")
const scrambledTNTgameButtonAnswer = document.querySelector(".scrambledTNTgameButtonAnswer")

scrambledTNTbuttonCompare.addEventListener("click", scrambledcompareTNTinput)



// —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –ø–µ—Ä–µ–º–µ—à–∏–≤–∞—Ç—å –±—É–∫–≤—ã –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–≤–∞–¥—Ä–∞—Ç–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –±—É–∫–≤—ã
function scrambleWordFromArray() {
    value = chooseScrambledGame[scrambledtypeOrWriteNumber]


}

// —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –±—É–∫–≤—ã
function compareLetters() {

}


function shuffle(array) {
    return array.sort(function () {
        return Math.random() - 0.5;
    });
}

function scrambleWords(scrambledWords) {

    // console.log('words',scrambledWords)
    // console.log('splitValue.Eng',value.eng.split(" "))
    // console.log('splitValue.Eng SHUFFLE',value.eng.split(" ").map(word => shuffle(word)))
    //—Ç—É—Ç —Ö–æ—á–µ—Ç—Å—è —Å–Ω–æ–≤–∞ –ø–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º —Ä–∞–∑–±–∏—Ç—å, —á—Ç–æ–±—ã –±—ã–ª–æ –ø–æ–Ω—è—Ç–Ω–æ –∫–∞–∫–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ —á—Ç–æ –¥–µ–ª–∞–µ—Ç.
    // —è –ø—ã—Ç–∞–ª—Å—è –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É, —á—Ç–æ –µ—Å–ª–∏ –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–∏ —Å–ª–æ–≤–∞ –≤—Å–µ —Ç–∞–∫–∏ —Å–ª—É—á–∞–π–Ω–æ —Å–ª–æ–∂–∏–ª–∏—Å—å –≤ –≤–µ—Ä–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫, —Ç–æ —á—Ç–æ–±—ã –æ–Ω –µ—â–µ —Ä–∞–∑ –ø–µ—Ä–µ–º–µ—à–∞–ª
    // –Ω–∞–ø—Ä–∏–º–µ—Ä –µ—Å–ª–∏    on foot = on foto, —Ç–æ –æ–Ω –±—ã –µ—â–µ —Ä–∞–∑ –ø–µ—Ä–µ–º–µ—à–∞–ª
    // devmode()
    return scrambledWords.split(" ").map(word => shuffle(word.split("")).join("")).join(" ")
    // —Ç–∞–∫ –∫–∞–∫ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –ø—Ä–æ–±–µ–ª –æ–Ω —Ä–∞–∑–¥–µ–ª–∏—Ç –Ω–µ –ø–æ –±—É–∫–≤–∞–º –∞ –ø–æ —Å–ª–æ–≤–∞–º
    // —Ä–∞–∑–¥–µ–ª—è–µ—Ç —Å—Ç—Ä–æ–∫—É –Ω–∞ –º–∞—Å—Å–∏–≤ split

}

// function devmode() {
//     console.log("test")
//     let splittedWord = value.eng.split(" ")
//     let shuffledWord = shuffle(splittedWord.split("")) 
//     console.log(shuffledWord)
// }

function handleKeyup(event) {
    if (event.code === "Enter") {
        console.log(event.code);
        scrambledcompareTNTinput();
        compareTNTinput();
    }
    console.log(event.code);
    // –≤—ã–≤–æ–¥–∏—Ç –ª—é–±—É—é –Ω–∞–∂–∞—Ç—É—é –∫–ª–∞–≤–∏—à—É
}

function scrambledstartGameTNT() {
    scrambledTNTtimer.textContent = `00:${scrambledTNTbeforeExplosion}`
    popupMissionsAndSets.classList.add("none")
    gameTNT.classList.add("none")
    scrambledgameTNT.classList.remove("none")
    clickTest.classList.add("none")
    value = chooseScrambledGame[scrambledtypeOrWriteNumber]
    scrambledTNTgameTaskValue.textContent = value.ru
    scrambledTNTgameScrambledPhraseValue.textContent = scrambleWords(value.eng)

    // –≤–æ–∑–≤—Ä–∞—â–∞–µ–µ–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–º–µ–Ω—à–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –≤ –Ω–µ–µ –ø–µ—Ä–µ–¥–∞–ª–∏
    scrambledTNTgameCounter.classList.add("none")
    usedCheatsText.classList.remove("visible")
    clearInterval(scrambledTNTtimerMechanics)
    scrambledTNTstartTimer()
    scrambledTNTgameButtonIDK.classList.remove("none")
    scrambledTNTgameButtonAnswer.classList.add("none")
    scrambledTNTbuttonCompare.classList.remove("none")
    scrambledTNTbuttonCompare.classList.remove("none")
    scrambledTNTgameButtonStartAgain.classList.add("none")
    scrambledTNTtimer.classList.add("none")


    scrambleWordFromArray()

    addEventListener("keyup", handleKeyup)

}

function scrambledTNTstartTimer() {
    scrambledTNTtimerMechanics = setInterval(() => {
        if (scrambledTNTbeforeExplosion <= 0) scrambledTNTgameover()

        // GREAT TIMER function by EGORCHIK!
        // % - –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è 
        scrambledTNTtimerFormat = `${Math.trunc(scrambledTNTbeforeExplosion / 60) > 9
            ? Math.trunc(scrambledTNTbeforeExplosion / 60)
            : '0' + Math.trunc(scrambledTNTbeforeExplosion / 60)}:${Math.trunc(scrambledTNTbeforeExplosion % 60) > 9
                ? Math.trunc(scrambledTNTbeforeExplosion % 60)
                : '0' + Math.trunc(scrambledTNTbeforeExplosion % 60)}`

        scrambledTNTtimer.textContent = scrambledTNTtimerFormat
        scrambledTNTbeforeExplosion++
    }, 1000) //1000 —ç—Ç–æ –æ–¥–Ω–∞ —Å–µ–∫—É–Ω–¥–∞ (–≤ –º–∏–ª–∏—Å–∫—É–Ω–¥–∞)
}
function scrambledTNTgameover() {
    scrambledTNTgameInfo.textContent = "Büí•üí•m!"
    clearInterval(scrambledTNTtimerMechanics)
    scrambledTNTgameTaskHint.textContent = `–æ–±–µ–∑–≤—Ä–µ–∂–µ–Ω–æ :  ${scrambledscoreTNTGame} out of ${chooseScrambledGame.length} bombs`
    scrambledTNTgameTaskValue.textContent = `—Å–¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ –ø–æ–¥–µ–ª–∏—Å—å —Å –í–∏–Ω—Å–µ–Ω—Ç–æ–º`
    // TNTuserInput.value = `or üëá deactivate more`
    scrambledTNTuserInput.value = `üß® –∏–ª–∏ –æ–±–µ–∑–≤—Ä–µ–¥—å –±–æ–ª—å—à–µ üß®`
    scrambledTNTbuttonCompare.classList.add("none")
    scrambledTNTgameButtonStartAgain.classList.remove("none")
    scrambledTNTgameCounter.classList.add("none")
    scrambledTNTuserInput.classList.remove("underlinedText")
    // TNTgameTaskHint.innerHTML = `–ø–æ–ø—Ä–æ–±—É–π –æ–±–µ–∑–≤—Ä–µ–¥–∏—Ç—å –≤—Å–µ`

}

function scrambledcompareTNTinput() {
    // console.log("–æ—Ç–≤–µ—Ç", value.eng)
    // console.log(TNTuserInput)

    if (scrambledTNTuserInput.value.toLowerCase() === value.eng.toLowerCase()) {

        //  scoreTNTGame += 1
        scrambledscoreTNTGame++
        scrambledTNTbeforeExplosion += 12
        scrambledTNTgameCounter.classList.remove("none")
        scrambledTNTuserInput.value = ""
        // typeOrWriteGame–°ounter.textContent = `–≤–µ—Ä–Ω–æ:  ${scoreTNTGame} out of ${chooseTypeOrWrite.length}`
        // typeOrWriteGame–°ounter.classList.add("green")
        scrambledTNTgameTaskHint.innerHTML = `YES! –≤–µ—Ä–Ω–æ! Next word :`
        scrambledTNTgameTaskHint.classList.remove("red")
        scrambledTNTgameTaskHint.classList.add("green")
        scrambledtntGameNextWordToTranslate(scrambledTNTgameTaskValue)
        scrambledTNTgameScrambledPhraseValue.textContent = scrambleWords(value.eng)
        keySoundInputOk.play()
        scrambledTNTuserInput.classList.remove("underlinedText")
    }
    else {
        scrambledTNTgameTaskHint.classList.remove("green")
        scrambledTNTgameTaskHint.classList.remove("yellow")
        scrambledTNTgameTaskHint.classList.add("red")
        scrambledTNTuserInput.classList.add("underlinedText")

        scrambledTNTgameTaskHint.textContent = "–Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç... –ø—Ä–æ–≤–µ—Ä—å –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å —Å–∫—Ä–∏–Ω—à–æ—Ç –í–∏–Ω—Å–µ–Ω—Ç—É"




    }

}


function scrambledtntGameNextWordToTranslate(scrambledTNTgameTaskValue) {
    scrambledtypeOrWriteNumber = scrambledtypeOrWriteNumber + 1
    value = chooseScrambledGame[scrambledtypeOrWriteNumber]
    scrambledTNTgameButtonIDK.classList.remove("none")
    scrambledTNTgameButtonAnswer.classList.add("none")
    if (value) {
        scrambledTNTgameTaskValue.innerHTML = value.ru
    } else {
        clearInterval(scrambledTNTtimerMechanics)
        scrambledTNTgameTaskHint.classList.add("yellow")
        scrambledTNTgameInfo.textContent = "–í—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å –≤ –∑–∞–ø–∞—Å–µ :"
        scrambledTNTgameTaskHint.textContent = "Super! –°–¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç –∏¬†–æ—Ç–ø—Ä–∞–≤—å¬†to¬†Vincent"
        scrambledTNTgameTaskValue.textContent = `I am the best agent`
        scrambledTNTuserInput.value = `–≥–æ—Ä–¥–∏—Å—å –º–Ω–æ–π, —É—á–∏–ª–∫–∞!`
        scrambledTNTbuttonCompare.classList.add("none")
        scrambledTNTgameButtonStartAgain.classList.remove("none")
    }
    // TNTgameTaskValue.classList.add("none")
    // TNTgameTaskHint.textContent = `–≤—ã –ø–µ—Ä–µ–≤–µ–ª–∏:  ${scoreTNTGame} –∏–∑ ${chooseTypeOrWrite.length}`
    scrambledTNTgameCounter.textContent = `—Ä–∞—Å–ø—É—Ç–∞–Ω–æ —Å–ª–æ–≤:  ${scrambledscoreTNTGame} `

}


// TNTgameButtonStartAgain.addEventListener("click", pageReloadRefresh)
scrambledTNTgameButtonStartAgain.addEventListener("click", scrambledrestartTNTgame)

scrambledTNTgameButtonIDK.addEventListener("click", scrambledshowHintTNT)

function scrambledshowHintTNT() {
    if (value.hint === undefined) {

        scrambledTNTgameTaskHint.textContent = "ü§∑‚Äç‚ôÄÔ∏è –∑–¥–µ—Å—å –Ω–µ—á–µ–≥–æ –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å ü§∑‚Äç‚ôÇÔ∏è –ø—ã—Ç–∞–π—Å—è –∫–∞–∫-—Ç–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏"
        scrambledTNTgameTaskHint.classList.remove("red")
        scrambledTNTgameTaskHint.classList.remove("yellow")
        scrambledTNTgameTaskHint.classList.add("green")


    } else {
        // TNTgameTaskHint.textContent = "Okay , –≤–æ—Ç —Ç–∞–∫–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞ –µ—Å—Ç—å : " + value.hint
        // scrambledTNTgameTaskHint.textContent = "–ë–ª–∏–Ω! –ö–∞–∫ –±—ã —Ç—É—Ç –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å-—Ç–æ : " + value.hint
        scrambledTNTgameTaskValue.textContent = "/¬†" + value.hint + "¬†/"
        scrambledTNTgameTaskHint.classList.remove("red")
        scrambledTNTgameTaskHint.classList.remove("yellow")
        scrambledTNTgameTaskHint.classList.add("green")


    }
    scrambledTNTgameButtonAnswer.classList.remove("none")
    scrambledTNTgameButtonIDK.classList.add("none")
}

scrambledTNTgameButtonAnswer.addEventListener("click", scrambledshowAnswerTNT)

function scrambledshowAnswerTNT() {

    scrambledTNTgameButtonIDK.classList.remove("none")
    scrambledTNTgameButtonAnswer.classList.add("none")
    scrambledTNTgameTaskHint.classList.remove("green")
    scrambledTNTgameTaskHint.classList.remove("yellow")

    scrambledTNTgameTaskHint.textContent = "–≤–æ—Ç –æ—Ç–≤–µ—Ç : " + value.eng
    // TNTgameTaskHint.textContent = "- 5 —Å–µ–∫—É–Ω–¥. PANIC !!! "
    // TNTgameTaskValue.textContent = value.ru + " –ë—ã—Å—Ç—Ä–µ–µ!!! –í–≤–æ–¥–∏ –æ—Ç–≤–µ—Ç : " + value.eng
    // TNTgameTaskValue.textContent = " –ë—ã—Å—Ç—Ä–µ–µ!!! –í–≤–æ–¥–∏ –æ—Ç–≤–µ—Ç : " + value.eng + " (" + value.ru + ")"
    scrambledTNTgameTaskValue.textContent = value.ru
    scrambledTNTbeforeExplosion -= 4

}


function scrambledrestartTNTgame() {
    scrambledscoreTNTGame = 0
    scrambledtypeOrWriteNumber = 0
    // scrambledTNTbeforeExplosion = 0
    scrambledTNTgameInfo.textContent = "–≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ—à–ª–æ : üß®"
    scrambledTNTuserInput.value = ""
    scrambledTNTgameTaskHint.textContent = "—Ä–∞—Å—à–∏—Ñ—Ä—É–π —ç—Ç–æ"
    scrambledTNTgameTaskValue.textContent = `—Å–¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ –ø–æ–¥–µ–ª–∏—Å—å —Å –í–∏–Ω—Å–µ–Ω—Ç–æ–º`

    scrambledTNTbuttonCompare.classList.remove("none")
    scrambledTNTgameButtonStartAgain.classList.add("none")
    scrambledTNTgameCounter.classList.remove("none")
    scrambledTNTgameTaskHint.classList.remove("red")
    scrambledTNTgameTaskHint.classList.add("green")


    chooseScrambledGame = chooseScrambledGame.sort(function () {
        return Math.random() - 0.5;
    });
    removeEventListener("keyup", handleKeyup)

    scrambledstartGameTNT()

}



// scrambledGame –≤—ã—à–µ


// —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function pageReloadRefresh() {
    location.reload()
}

// —Å–∫—Ä–æ–ª–ª–∏–Ω–≥ –∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ (—É—Ç–æ—á–Ω–∏—Ç—å, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω—É–∂–Ω–æ –ª–∏ —ç—Ç–æ –≤–æ–æ–±—â–µ —Ç–µ–ø–µ—Ä—å)
const scrollLeft = document.querySelector(".scroll-left")
const scrollRight = document.querySelector(".scroll-right")

function scroll(direction) {
    popupMissionsAndSetsSets.scrollBy(direction, 0)
}

if (isTouch()) {
    scrollLeft.addEventListener("touchstart", () => {
        interval = setInterval(() => {
            scroll(-2)
        }, 0);
    })
    scrollLeft.addEventListener("touchend", () => {
        clearInterval(interval)
    })
    scrollRight.addEventListener("touchstart", () => {
        interval = setInterval(() => {
            scroll(2)
        }, 0);
    })
    scrollRight.addEventListener("touchend", () => {
        clearInterval(interval)
    })
} else {
    scrollLeft.addEventListener("mouseup", () => {
        clearInterval(interval)
    })
    scrollLeft.addEventListener("mousedown", () => {
        interval = setInterval(() => {
            scroll(-2)
        }, 0);
    })
    scrollLeft.addEventListener("mouseout", () => {
        clearInterval(interval)
    })
    scrollRight.addEventListener("mousedown", () => {
        interval = setInterval(() => {
            scroll(2)
        }, 0);
    })
    scrollRight.addEventListener("mouseup", () => {
        clearInterval(interval)
    })
    scrollRight.addEventListener("mouseout", () => {
        clearInterval(interval)
    })
}
// –≤—ã—à–µ —Å–∫—Ä–æ–ª–ª–∏–Ω–≥ –∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ (—É—Ç–æ—á–Ω–∏—Ç—å, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω—É–∂–Ω–æ –ª–∏ —ç—Ç–æ –≤–æ–æ–±—â–µ —Ç–µ–ø–µ—Ä—å)





// –Ω–æ–≤–∞—è –∏–≥—Ä–∞ –Ω–∏–∂–µ –≤—Å–µ –¥–ª—è –∏–≥—Ä—ã two decks –Ω–∏–∂–µ –≤—Å–µ –¥–ª—è –∏–≥—Ä—ã two decks –Ω–∏–∂–µ –≤—Å–µ –¥–ª—è –∏–≥—Ä—ã two decks –Ω–∏–∂–µ –≤—Å–µ –¥–ª—è –∏–≥—Ä—ã two decks –Ω–∏–∂–µ –≤—Å–µ –¥–ª—è –∏–≥—Ä—ã two decks 

// clickTest.addEventListener("click",startGameTwoDecks())
function startGameTwoDecks() {
    mainContainerIntroAnd2games.classList.add("none")
    gameBender.classList.add("none")
    gameTrickyQuiz.classList.add("none")
    mainContainer5gameTwoCardDecks.classList.remove("none")
    new gameTwoDecks({ gameTwoCardDecks: gameTwoDecksListData[currentSet] })
}

// –Ω–æ–≤–∞—è –∏–≥—Ä–∞ –≤—ã—à–µ –≤—Å–µ –¥–ª—è –∏–≥—Ä—ã two decks



const resetPageButton = document.querySelector(".resetPage")

resetPageButton.addEventListener("click", pageReloadRefresh)



// –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç –∏–¥–µ–∏ –Ω–∏–∂–µ —É—Ç–æ—á–Ω–∏—Ç—å –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç –∏–¥–µ–∏ –Ω–∏–∂–µ —É—Ç–æ—á–Ω–∏—Ç—å –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç –∏–¥–µ–∏ –Ω–∏–∂–µ —É—Ç–æ—á–Ω–∏—Ç—å –æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç –∏–¥–µ–∏ –Ω–∏–∂–µ —É—Ç–æ—á–Ω–∏—Ç—å

const backTomainContainerIntroAnd2gamesbutton = document.querySelector(".backTomainContainerIntroAnd2gamesbutton")


function backToChoosingTheTask() {
    mainContainerIntroAnd2games.classList.remove("none")
    gameBender.classList.add("none")
    userSearchesForMission.classList.add("none")
    // popupMissionsAndSetsSets.classList.add("hide")
    gameTrickyQuiz.classList.add("none")
    // console.log("hi")
}






//–Ω–∏–∂–µ –≤—Å–µ, —á—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –∞—É–¥–∏–æ, –Ω–µ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —É—Ç–æ—á–Ω–∏—Ç—å

// const MusicFromGoogleDriveDefault = new Audio("https://drive.google.com/file/d/1YlPN33KcfXRkw2BgHnNZVeb2z7NkiZKP/view?usp=sharing"); 
// —É—Ç–æ—á–Ω–∏—Ç—å –ø–æ–∫–∞ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫ —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å —Ç—Ä–µ–∫ —Ä–∞–∑–Ω—ã–π –≤ java
const keySoundInput = new Audio("https://zvukitop.com/wp-content/uploads/2021/01/najatie-na-klaviaturu-iphone.mp3");
keySoundInput.volume = 0.08
const keySoundInputOk = new Audio("https://zvukitop.com/wp-content/uploads/2021/01/zvuk-oplaty-apple-pay.mp3");
// const audioIconOnOffTrack = document.querySelector(".audioIconOnOffTrack")
const audioIcon = document.querySelector(".audioIcon")
const audioIconOnOff = document.querySelector(".audioIconOnOff")
const missionMusicBackgroundIconButton = document.querySelector(".missionMusicBackgroundIconButton")
const helloMusicStartButton = document.querySelector(".helloMusicStartButton")
const audio = document.querySelector(".audio")
const missionMusicBackground = document.querySelector(".missionMusicBackground")
// const audioTest = new Audio("https://zvukitop.com/wp-content/uploads/2021/01/hello-zvuk-111.mp3");
const audioTest = new Audio("./audio/SantaB1.mp3");
// const audioTest = document.querySelector(".audio")
// const audiomissionMusicBackground = new Audio("https://audio.jukehost.co.uk/wDqy560srBF4ZvgkwI8wAqNcgK9I0cW0");

function helloMusicStartButtonInvisible() {
    // const audiomissionMusicBackground = new Audio("https://zvukitop.com/wp-content/uploads/2021/01/hello-zvuk-111.mp3");
    audiomissionMusicBackground.volume = 0.4;
    audiomissionMusicBackground.play()
    audiomissionMusicBackground.loop = false;
    helloMusicStartButton.classList.add("invisible")
    audioIconOnOff.classList.add("visible")
    // wtf –ø–æ–∫–∞ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫ —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å —Ç—Ä–µ–∫ —Ä–∞–∑–Ω—ã–π –≤ java
    // audioIconOnOffTrack = new Audio("https://zvukitop.com/wp-content/uploads/2021/01/hello-zvuk-111.mp3");
    // missionMusicBackgroundIconButton.classList.add("off")
}


const audioIconOnOffTrack = new Audio("https://audio.jukehost.co.uk/JHNeJtC076ydQwBp3vBmLGiMTMpExydO");

// helloMusicStartButton.addEventListener("click", helloMusicStartButtonInvisible)

audioIconOnOffTrack.loop = false;

audioIconOnOff.addEventListener("click", () => {
    audioIconOnOff.classList.toggle("off")
    audiomissionMusicBackground.pause()
    if (audioIconOnOffTrack.volume == 0) {
        audioIconOnOffTrack.volume = 0.4
        audioIconOnOffTrack.play()
    } else {
        audioIconOnOffTrack.volume = 0
        audioIconOnOffTrack.pause()
    }
})

function chooseSong(set) {
    // const song = playList[set]
    // if (!!song) {
    //     audio.src = song;
    //     console.log(audio.paused,song);
    //     audio.play()
    //  console.log("–ø—Ä–æ–≤–µ—Ä–∫–∞")
    const MissionSong = playList[set]
    audio.src = MissionSong
    // }
}

audioIcon.addEventListener("click", audioOnOff)
function audioOnOff() {
    audioIcon.classList.toggle("off")
    // audio.classList.add("off") –º—É–∑—ã–∫–∞ –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–µ —á–µ—Ä–µ–∑ —Å—Ç–∏–ª–∏
    audio.play()
    audio.loop = true;
    if (audio.volume == 0) {
        audio.volume = 0.7
    } else {
        audio.volume = 0
    }
}

// function GoogleDriveMusicCheck() {
//     MusicFromGoogleDriveDefault.play()
// }

missionMusicBackgroundIconButton.addEventListener("click", missionBackgroundMusicOnOff)
function missionBackgroundMusicOnOff() {
    missionMusicBackgroundIconButton.classList.toggle("off")
    // audio.classList.add("off") –º—É–∑—ã–∫–∞ –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–µ —á–µ—Ä–µ–∑ —Å—Ç–∏–ª–∏
    missionMusicBackground.play()
    missionMusicBackground.loop = true;
    if (missionMusicBackground.volume == 0) {
        missionMusicBackground.volume = 0.7
    } else {
        missionMusicBackground.volume = 0
    }
}
// –≤—ã—à–µ –≤—Å–µ, —á—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –º—É–∑—ã–∫–æ–π –∏ –∞—É–¥–∏–æ



// –∑–∞–º–µ—Ç–∫–∏ –º–æ–∏:

// –±—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç –ú–æ—Ö–∏–Ω–¥–µ—Ä—Å—é—Ä—ç–∂
// alert(1) 
// alert("—á—ë—Ç –Ω–µ —Ç–æ =) ") 


// –ú–æ—Ö–∏–Ω–¥—ç—Ä explained!

// function calcPlus(x, y) {
//     console.log(x + y)
//     return x + y
// }
// console.log(calcPlus(15, 20))

// –ø–æ–º–µ—Ç–∫–∏ —Å–ª–µ–≤–∞ –∫—Ä–∞—Å–Ω—ã–π –∫—Ä—É–∂–æ–∫
